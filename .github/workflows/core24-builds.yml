name: checkbox core24 builder

on:
  workflow_dispatch:
  workflow_call:

jobs:
  snap_runtime:
    strategy:
      fail-fast: false
      matrix:
        releases: [24]
        arch: [amd64, arm64]
        tag: [X64, ARM64]
        exclude:
          - arch: amd64
            tag: ARM64
          - arch: arm64
            tag: X64
    runs-on:
      group: "Canonical self-hosted runners"
      labels:
        - self-hosted
        - linux
        - jammy
        - large
        - ${{ matrix.tag }}
    timeout-minutes: 1200 #20h, this will timeout sooner due to inner timeouts
    env:
      SERIES: series${{ matrix.releases }}
      SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT7_CREDS }}
    name: Runtime (Core) ${{ matrix.releases }}-${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Copy over the common files for series ${{ matrix.releases }}
        run: |
          cd checkbox-core-snap/
          sudo apt update && sudo apt install -qq -y python3-setuptools-scm
          ./prepare.sh $SERIES
      - name: Add LP credentials
        run: |
          mkdir -p ~/.local/share/snapcraft/provider/launchpad/
          echo '${{ secrets.LP_CREDS }}' > ~/.local/share/snapcraft/provider/launchpad/credentials
          git config --global user.email "robot@lists.canonical.com"
          git config --global user.name "Certification bot"
      - uses: Wandalen/wretry.action@v3.4.0_js_action
        name: Build the snap
        timeout-minutes: 600 # 10hours
        with:
          action: Hook25/action-build@707dce252c4f367b6c1afe61ed577f7413cf7912
          attempt_delay: 600000 # 10min
          attempt_limit: 5
          with: |
            path: checkbox-core-snap/series${{ matrix.releases }}
            snapcraft-channel: 8.x/stable
      - uses: actions/upload-artifact@v4
        name: Upload logs on failure
        if: failure()
        with:
          name: snapcraft-log-series${{ matrix.releases }}
          path: |
            /home/runner/.cache/snapcraft/log/
            /home/runner/.local/state/snapcraft/log/
            checkbox-core-snap/series${{ matrix.releases }}/checkbox*.txt
      - uses: actions/upload-artifact@v4
        name: Upload the snap as artifact
        with:
          name: checkbox${{ matrix.releases }}_${{ matrix.arch }}
          path: checkbox-core-snap/series${{ matrix.releases }}/*.snap
      - uses: Wandalen/wretry.action@v3.4.0_js_action
        name: Upload the snap to the store
        timeout-minutes: 600 # 10hours
        with:
          attempt_delay: 600000 # 10min
          attempt_limit: 10
          command: |
            for snap in checkbox-core-snap/series${{ matrix.releases }}/*.snap ; \
            do \
              echo "Uploading $snap..." ; \
              snapcraft upload $snap --release edge ; \
            done
  snap_frontend:
    strategy:
      fail-fast: false
      matrix:
        type: [classic, uc]
        releases: [24]
        arch: [amd64, arm64]
        tag: [X64, ARM64]
        exclude:
          - arch: amd64
            tag: ARM64
          - arch: arm64
            tag: X64
    runs-on:
      group: "Canonical self-hosted runners"
      labels:
        - self-hosted
        - linux
        - jammy
        - large
        - ${{ matrix.tag }}
    timeout-minutes: 1200 #20h, this will timeout sooner due to inner timeouts
    env:
      SERIES: series_${{ matrix.type }}${{ matrix.releases }}
      SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT7_CREDS }}
    name: Frontend ${{ matrix.type }}${{ matrix.releases }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Copy over the common files for series ${{ matrix.type }}${{ matrix.releases }}
        run: |
          cd checkbox-snap/
          sudo apt update && sudo apt install -qq -y python3-setuptools-scm
          ./prepare_${{ matrix.type }}.sh $SERIES
      - name: Add LP credentials
        run: |
          mkdir -p ~/.local/share/snapcraft/provider/launchpad/
          echo '${{ secrets.LP_CREDS }}' > ~/.local/share/snapcraft/provider/launchpad/credentials
          git config --global user.email "robot@lists.canonical.com"
          git config --global user.name "Certification bot"
      - name: Print Launchpad build repository
        run: |
          echo "Building at: https://git.launchpad.net/~ce-certification-qa/+snap/$SNAPCRAFT_BUILDER_ID"
      - uses: Wandalen/wretry.action@v3.4.0_js_action
        name: Building the snaps
        timeout-minutes: 600 # 10hours
        with:
          action: Hook25/action-build@707dce252c4f367b6c1afe61ed577f7413cf7912
          attempt_delay: 600000 # 10min
          attempt_limit: 5
          with: |
            path: checkbox-snap/series_${{ matrix.type }}${{ matrix.releases }}
            snapcraft-channel: 8.x/stable
      - uses: actions/upload-artifact@v4
        name: Upload logs on failure
        if: failure()
        with:
          name: snapcraft-log-series-${{ matrix.type }}${{ matrix.releases }}${{ matrix.arch }}
          path: |
            /home/runner/.cache/snapcraft/log/
            /home/runner/.local/state/snapcraft/log/
            checkbox-snap/series_${{ matrix.type }}${{ matrix.releases }}/checkbox*.txt
      - uses: actions/upload-artifact@v4
        name: Upload the snaps as artefacts
        with:
          name: series_${{ matrix.type }}${{ matrix.releases }}${{ matrix.arch }}
          path: checkbox-snap/series_${{ matrix.type }}${{ matrix.releases }}/*.snap
      - uses: Wandalen/wretry.action@v3.4.0_js_action
        name: Upload the snaps to the store
        timeout-minutes: 600 # 10hours
        with:
          attempt_delay: 600000 # 10min
          attempt_limit: 10
          command: |
            for snap in checkbox-snap/series_${{ matrix.type }}${{ matrix.releases }}/*.snap ; \
            do \
              echo "Uploading $snap..." ; \
              if [ ${{ matrix.type }} = 'classic' ]; then \
                if [ ${{ matrix.releases }} = '22' ]; then \
                  snapcraft upload $snap --release ${{ matrix.releases }}.04/edge,latest/edge ; \
                else \
                  snapcraft upload $snap --release ${{ matrix.releases }}.04/edge ; \
                fi \
              else \
                snapcraft upload $snap --release ${{ matrix.type }}${{ matrix.releases }}/edge ; \
              fi ; \
            done
