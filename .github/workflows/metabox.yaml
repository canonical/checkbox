name: Run Metabox when PR is approved

on:
  pull_request_review:
    types: [submitted]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  metabox_run_required:
    runs-on: ubuntu-latest
    name: Check for changes in metabox and checkbox-ng dirs
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use git diff to see if there are any changes in the metabox and checkbox-ng directories
        id: check_diff
        continue-on-error: true
        run: |
          git diff --exit-code HEAD origin/main -- checkbox-ng metabox
          if [[ $? -eq 0 ]]
            then
              echo "No Metabox run required."
              echo "required_run=false" >> $GITHUB_OUTPUT
            else
              echo "Metabox run required!"
              echo "required_run=true" >> $GITHUB_OUTPUT
          fi

  Metabox:
    if: (github.event.review.state == 'approved' && needs.metabox_run_required.outputs.required_run == 'true') || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix:
        # Version of Ubuntu
        os: [16.04, 18.04, 20.04, 22.04]
        # Checkbox mode to test
        mode: [local, remote]
    defaults:
      run:
        working-directory: metabox
    needs: metabox_run_required
    runs-on: ubuntu-20.04
    env:
      # Workaround to get loguru colored output
      # See https://github.com/Delgan/loguru/issues/604
      PYCHARM_HOSTED: True
    steps:
      - name: Checkout Checkbox monorepo
        uses: actions/checkout@v3
      - name: Setup LXD
        uses: canonical/setup-lxd@v0.1.1
      - name: Add ZFS storage
        run: |
          lxc storage list
          lxc profile device remove default root
          lxc storage delete default
          lxc storage create metabox${{ matrix.os }} zfs
          lxc profile device add default root disk path=/ pool=metabox${{ matrix.os }}
          lxc storage list
      - name: Install dependencies
        run: python3 -m pip install --upgrade pyopenssl
      - name: Install Metabox
        run: python3 -m pip install -e .
      - name: Run Metabox scenarios
        run: metabox configs/${{ matrix.mode }}-source-${{ matrix.os }}.py --log TRACE
