name: Test provider-certification-client with tox

on:
  push:
    branches: [ main ]
    paths:
      - providers/certification-client/**
  pull_request:
    branches: [ main ]
    paths:
      - providers/certification-client/**
  workflow_dispatch:

jobs:
  tox_test_provider_certification_client:
    name: Test provider-certification-client with tox
    defaults:
      run:
        working-directory: providers/certification-client
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python: ["3.5", "3.6", "3.8", "3.10"]
        include:
          - python: "3.5"
            tox_env_name: "py35"
          - python: "3.6"
            tox_env_name: "py36"
          - python: "3.8"
            tox_env_name: "py38"
          - python: "3.10"
            tox_env_name: "py310"
    steps:
      - uses: actions/checkout@v4
      # Python 3.5 setup was failing because of a CERTIFICATE_VERIFY_FAILED
      # error. To fix this, we have set up manually PIP_TRUSTED_HOST, checking
      # first that we can "curl" the hosts, since they will fail in case of
      # expired/invalid/self-signed certificate.

      - name: Workaround SSL Certificates manual verification for Python
        run: |
          curl --fail --silent --show-error https://pypi.python.org
          curl --fail --silent --show-error https://pypi.org
          curl --fail --silent --show-error https://files.pythonhosted.org
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
        env:
          PIP_TRUSTED_HOST: pypi.python.org pypi.org files.pythonhosted.org
      - name: Install tox
        run: pip install tox
      - name: Run tox
        run: tox -e${{ matrix.tox_env_name }}
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: provider-certification-client
