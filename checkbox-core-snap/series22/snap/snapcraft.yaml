name: checkbox22
summary: Checkbox runtime and public providers
description: "Checkbox runtime and public providers"
grade: stable
confinement: strict

adopt-info: version-calculator

base: core22

# Don't forget to add a new slot if a new provider part is added in the parts
# section below.
slots:
  provider-resource:
    interface: content
    read:
      - $SNAP/providers/checkbox-provider-resource
  provider-checkbox:
    interface: content
    read:
      - $SNAP/providers/checkbox-provider-base
  provider-docker:
    interface: content
    read:
      - $SNAP/providers/checkbox-provider-docker
  provider-tpm2:
    interface: content
    read:
      - $SNAP/providers/checkbox-provider-tpm2
  provider-iiotg:
    interface: content
    read:
      - $SNAP/providers/checkbox-provider-iiotg
  provider-engineering-tests:
    interface: content
    read:
      - $SNAP/providers/checkbox-provider-engineering-tests
  provider-sru:
    interface: content
    read:
      - $SNAP/providers/checkbox-provider-sru
  provider-gpgpu:
    interface: content
    read:
      - $SNAP/providers/checkbox-provider-gpgpu
  provider-certification-client:
    interface: content
    read:
      - $SNAP/providers/checkbox-provider-certification-client
  provider-certification-server:
    interface: content
    read:
      - $SNAP/providers/checkbox-provider-certification-server
  provider-tutorial:
    interface: content
    read:
      - $SNAP/providers/checkbox-provider-tutorial
  checkbox-runtime:
    interface: content
    read:
      - /

package-repositories:
  - type: apt
    ppa: checkbox-dev/stable

parts:
  version-calculator:
    plugin: dump
    source: .
    override-pull: |
      snapcraftctl pull
      # version.txt created by prepare.sh
      export version=`cat $SNAPCRAFT_PART_SRC/version.txt`
      [ $version ] || exit 1
      snapcraftctl set-version $version
    stage:
      - version.txt
################################################################################
# Upstream: https://kernel.ubuntu.com/git/hwe/fwts.git/plain/snapcraft.yaml
  fwts:
    source-tag: "V23.09.00"
    source-depth: 1
    plugin: autotools
    source: https://github.com/fwts/fwts.git
    autotools-configure-parameters:
      - --prefix=/
    stage-packages:
      - libfdt1
      - libbsd0
      - libpci3
    build-packages:
      - gcc
      - make
      - autoconf
      - automake
      - libtool
      - libjson-c-dev
      - flex
      - bison
      - dh-autoreconf
      - libglib2.0-dev
      - libfdt-dev
      - libbsd-dev
    after: [version-calculator]
################################################################################
# Upstream: https://kernel.ubuntu.com/git/cking/stress-ng.git/plain/snap/snapcraft.yaml
  stress-ng:
    source-tag: "V0.15.09"
    source-depth: 1
    plugin: make
    build-environment:
      - CFLAGS: "-fstack-protector-strong -Wformat -Werror=format-security"
      - LDFLAGS: "-Wl,-z,relro -lrt"
    source: https://github.com/ColinIanKing/stress-ng.git
    make-parameters:
      - STATIC=1 VERBOSE=1
    build-packages:
      - gcc
      - make
      - zlib1g-dev
      - libbsd-dev
      - libgcrypt20-dev
      - libkeyutils-dev
      - libapparmor-dev
      - libaio-dev
      - libcap-dev
      - libsctp-dev
      - libatomic1
      - libjudy-dev
      - libjpeg-dev
      - libkmod-dev
      - libattr1-dev
      - libxxhash-dev
      - libmd-dev
      - on amd64: [ libipsec-mb-dev ]
    after: [fwts]
################################################################################
# Upstream: https://kernel.ubuntu.com/git/cking/snapcraft-snaps.git/tree/acpica/snapcraft.yaml
  acpi-tools:
    source-tag: "R10_20_22"
    source-depth: 1
    plugin: make
    source: https://github.com/acpica/acpica.git
    build-packages:
      - gcc
      - make
      - bison
      - flex
    prime:
      - usr/bin/
    after: [stress-ng]
################################################################################
  checkbox-support:
    plugin: python
    source: checkbox-support
    source-type: local
    stage-packages:
      # actual requirements
      - python3-bluez
      - python3-pyparsing
      - python3-requests-unixsocket
      - python3-systemd
      # added to stage python:
      - libpython3-stdlib
      - libpython3.10-stdlib
      - libpython3.10-minimal
      - python3-pip
      - python3-setuptools
      - python3-wheel
      - python3-venv
      - python3-minimal
      - python3-distutils
      - python3-pkg-resources
      - python3.10-minimal
    build-packages:
      - libbluetooth-dev
      - python3-dev
    python-packages:
      - pynmea2
    after: [acpi-tools]
    stage:
      - -pyvenv.cfg
      - -bin/activate*
      - -**/RECORD
      - -**/__pycache__
      - -debian
    build-environment:
      - C_INCLUDE_PATH: /usr/include/python3.10
      - PYTHONPATH: $SNAPCRAFT_PART_INSTALL/usr/lib/python3/dist-packages:${PYTHONPATH:-}
      - SETUPTOOLS_SCM_PRETEND_VERSION: "$(cat $SNAPCRAFT_STAGE/version.txt)"
    override-build: |
      snapcraftctl build
################################################################################
  checkbox-ng:
    plugin: python
    source: checkbox-ng
    source-type: local
    build-packages:
      - zlib1g-dev
      - build-essential
    stage-packages:
      - python3-markupsafe
      - python3-jinja2
      - python3-packaging
      - python3-padme
      - python3-requests-oauthlib
      - python3-urwid
      - python3-xlsxwriter
      # added to stage python:
      - libpython3-stdlib
      - libpython3.10-stdlib
      - libpython3.10-minimal
      - python3-pip
      - python3-setuptools
      - python3-wheel
      - python3-venv
      - python3-minimal
      - python3-distutils
      - python3-pkg-resources
      - python3.10-minimal
    python-packages:
      - tqdm
      - picamera # p-p-c dep that wouldnt install in another part
    after: [checkbox-support]
    stage:
      - -pyvenv.cfg
      - -bin/activate*
      - -**/RECORD
      - -**/__pycache__
      - -debian
    build-environment:
      - PYTHONPATH: $SNAPCRAFT_PART_INSTALL/usr/lib/python3/dist-packages:${PYTHONPATH:-}
      - READTHEDOCS: 'True' # simplifies picamera install
      - SETUPTOOLS_SCM_PRETEND_VERSION: "$(cat $SNAPCRAFT_STAGE/version.txt)"
    override-build: |
      snapcraftctl build
################################################################################
  checkbox-provider-resource:
    plugin: dump
    source: providers/resource
    source-type: local
    stage-packages:
      - cpu-checker
      - dpkg
      - dmidecode
      - libjson-xs-perl
      - pciutils
      - python3-requests-unixsocket
      - smartmontools
    override-build: |
      cd src && autoreconf -i && cd -
      export PYTHONPATH=$SNAPCRAFT_STAGE/lib/python3.10/site-packages:$SNAPCRAFT_STAGE/usr/lib/python3/dist-packages
      for path in $(find "$SNAPCRAFT_STAGE/providers/" -mindepth 1 -maxdepth 1 -type d); do export PROVIDERPATH=$path${PROVIDERPATH:+:$PROVIDERPATH}; done
      python3 manage.py validate
      python3 manage.py build
      python3 manage.py install --layout=relocatable --prefix=/providers/checkbox-provider-resource --root="$SNAPCRAFT_PART_INSTALL"
    build-packages:
      - autoconf
      - automake
      - libnl-3-dev
      - libnl-genl-3-dev
      - pkg-config
    after: [checkbox-ng]
################################################################################
  checkbox-provider-base:
    plugin: dump
    source: providers/base
    source-type: local
    override-build: |
      export PYTHONPATH=$SNAPCRAFT_STAGE/lib/python3.10/site-packages:$SNAPCRAFT_STAGE/usr/lib/python3/dist-packages
      for path in $(find "$SNAPCRAFT_STAGE/providers/" -mindepth 1 -maxdepth 1 -type d); do export PROVIDERPATH=$path${PROVIDERPATH:+:$PROVIDERPATH}; done
      python3 manage.py validate
      python3 manage.py build
      python3 manage.py install --layout=relocatable --prefix=/providers/checkbox-provider-base --root="$SNAPCRAFT_PART_INSTALL"
    stage-packages:
      - bc
      - bluez-tests
      - bonnie++
      - cryptsetup-bin
      - dbus
      - debsums
      - dmidecode
      - dmsetup
      - efibootmgr
      - ethtool
      - freeipmi-tools
      - fswebcam
      - gir1.2-cheese-3.0
      - gir1.2-clutter-1.0
      - gir1.2-gst-plugins-base-1.0
      - gir1.2-gudev-1.0
      - glmark2-es2
      - gnome-screenshot
      - gstreamer1.0-tools
      - gstreamer1.0-pulseaudio
      - on amd64: [hdapsd] # optional as not available for arm
      - hdparm
      - i2c-tools
      - ipmitool
      - iperf
      - iperf3
      - iw
      - jq
      - kmod
      - libasound2
      - libcap2-bin
      - libfdt1
      - libsvm3
      - lsb-release
      - lshw
      - mesa-utils
      - mokutil
      - net-tools
      - nmap
      - nux-tools
      - nvme-cli
      - obexftp
      - parted
      - pciutils
      - pulseaudio-utils
      - pyotherside
      - python3-dbus
      - python3-evdev
      - python3-gi
      - python3-natsort
      - python3-pil
      - python3-psutil
      - python3-pyqrcode
      - python3-serial
      - python3-yaml
      - python3-zbar
      - qml-module-qtquick-controls
      - qml-module-qtquick-layouts
      - qmlscene
      - smartmontools
      - usbutils
      - util-linux
      - uuid-runtime
      - wget
      - wmctrl
      - xz-utils
      - on armhf:
        - python3-rpi.gpio # only in focal
      - on arm64:
        - python3-rpi.gpio # only in focal
    build-packages:
      - libasound2-dev
      - libcap-dev
    organize:
      usr/lib/lib*.so*: usr/lib/$SNAPCRAFT_ARCH_TRIPLET/
    after: [checkbox-provider-resource]
################################################################################
  checkbox-provider-docker:
    plugin: dump
    source: providers/docker
    source-type: local
    override-build: |
      export PYTHONPATH=$SNAPCRAFT_STAGE/lib/python3.10/site-packages:$SNAPCRAFT_STAGE/usr/lib/python3/dist-packages
      for path in $(find "$SNAPCRAFT_STAGE/providers/" -mindepth 1 -maxdepth 1 -type d); do export PROVIDERPATH=$path${PROVIDERPATH:+:$PROVIDERPATH}; done
      python3 manage.py validate
      python3 manage.py build
      python3 manage.py install --layout=relocatable --prefix=/providers/checkbox-provider-docker --root="$SNAPCRAFT_PART_INSTALL"
    stage-packages:
      - apache2-utils
    after: [checkbox-provider-base]
################################################################################
  checkbox-provider-tpm2:
    plugin: dump
    source: providers/tpm2
    source-type: local
    override-build: |
      export PYTHONPATH=$SNAPCRAFT_STAGE/lib/python3.10/site-packages:$SNAPCRAFT_STAGE/usr/lib/python3/dist-packages
      for path in $(find "$SNAPCRAFT_STAGE/providers/" -mindepth 1 -maxdepth 1 -type d); do export PROVIDERPATH=$path${PROVIDERPATH:+:$PROVIDERPATH}; done
      python3 manage.py validate
      python3 manage.py build
      python3 manage.py install --layout=relocatable --prefix=/providers/checkbox-provider-tpm2 --root="$SNAPCRAFT_PART_INSTALL"
    stage-packages:
      - clevis-tpm2
    after: [checkbox-provider-docker]
################################################################################
  checkbox-provider-iiotg:
    plugin: dump
    source: providers/iiotg
    source-type: local
    override-build: |
      export PYTHONPATH=$SNAPCRAFT_STAGE/lib/python3.10/site-packages:$SNAPCRAFT_STAGE/usr/lib/python3/dist-packages
      for path in $(find "$SNAPCRAFT_STAGE/providers/" -mindepth 1 -maxdepth 1 -type d); do export PROVIDERPATH=$path${PROVIDERPATH:+:$PROVIDERPATH}; done
      python3 manage.py validate
      python3 manage.py build
      python3 manage.py install --layout=relocatable --prefix=/providers/checkbox-provider-iiotg --root="$SNAPCRAFT_PART_INSTALL"

    after: [checkbox-provider-tpm2]
################################################################################
  checkbox-provider-sru:
    plugin: dump
    source: providers/sru
    source-type: local
    override-build: |
      export PYTHONPATH=$SNAPCRAFT_STAGE/lib/python3.10/site-packages:$SNAPCRAFT_STAGE/usr/lib/python3/dist-packages
      for path in $(find "$SNAPCRAFT_STAGE/providers/" -mindepth 1 -maxdepth 1 -type d); do export PROVIDERPATH=$path${PROVIDERPATH:+:$PROVIDERPATH}; done
      python3 manage.py validate
      python3 manage.py build
      python3 manage.py install --layout=relocatable --prefix=/providers/checkbox-provider-sru --root="$SNAPCRAFT_PART_INSTALL"
    after: [checkbox-provider-iiotg]
################################################################################
  checkbox-provider-gpgpu:
    plugin: dump
    source: providers/gpgpu
    source-type: local
    override-build: |
      export PYTHONPATH=$SNAPCRAFT_STAGE/lib/python3.10/site-packages:$SNAPCRAFT_STAGE/usr/lib/python3/dist-packages
      for path in $(find "$SNAPCRAFT_STAGE/providers/" -mindepth 1 -maxdepth 1 -type d); do export PROVIDERPATH=$path${PROVIDERPATH:+:$PROVIDERPATH}; done
      python3 manage.py validate
      python3 manage.py build
      python3 manage.py install --layout=relocatable --prefix=/providers/checkbox-provider-gpgpu --root="$SNAPCRAFT_PART_INSTALL"
    after: [checkbox-provider-sru]
################################################################################
  checkbox-provider-certification-client:
    plugin: dump
    source: providers/certification-client
    source-type: local
    override-build: |
      export PYTHONPATH=$SNAPCRAFT_STAGE/lib/python3.10/site-packages:$SNAPCRAFT_STAGE/usr/lib/python3/dist-packages
      for path in $(find "$SNAPCRAFT_STAGE/providers/" -mindepth 1 -maxdepth 1 -type d); do export PROVIDERPATH=$path${PROVIDERPATH:+:$PROVIDERPATH}; done
      python3 manage.py validate
      python3 manage.py build
      python3 manage.py install --layout=relocatable --prefix=/providers/checkbox-provider-certification-client --root="$SNAPCRAFT_PART_INSTALL"
    after: [checkbox-provider-gpgpu]
################################################################################
  checkbox-provider-certification-server:
    plugin: dump
    source: providers/certification-server
    source-type: local
    override-build: |
      export PYTHONPATH=$SNAPCRAFT_STAGE/lib/python3.10/site-packages:$SNAPCRAFT_STAGE/usr/lib/python3/dist-packages
      for path in $(find "$SNAPCRAFT_STAGE/providers/" -mindepth 1 -maxdepth 1 -type d); do export PROVIDERPATH=$path${PROVIDERPATH:+:$PROVIDERPATH}; done
      python3 manage.py validate
      python3 manage.py build
      python3 manage.py install --layout=relocatable --prefix=/providers/checkbox-provider-certification-server --root="$SNAPCRAFT_PART_INSTALL"
    after: [checkbox-provider-certification-client]
################################################################################
  checkbox-provider-tutorial:
    plugin: dump
    source: providers/tutorial
    source-type: local
    override-build: |
      export PYTHONPATH=$SNAPCRAFT_STAGE/lib/python3.10/site-packages:$SNAPCRAFT_STAGE/usr/lib/python3/dist-packages
      for path in $(find "$SNAPCRAFT_STAGE/providers/" -mindepth 1 -maxdepth 1 -type d); do export PROVIDERPATH=$path${PROVIDERPATH:+:$PROVIDERPATH}; done
      python3 manage.py validate
      python3 manage.py build
      python3 manage.py install --layout=relocatable --prefix=/providers/checkbox-provider-tutorial --root="$SNAPCRAFT_PART_INSTALL"
    after: [checkbox-provider-base]
################################################################################
  opencv:
    plugin: make
    source: https://github.com/opencv/opencv.git
    source-tag: 4.9.0
    override-build: |
      cd $SNAPCRAFT_PART_SRC
      mkdir build
      cd build
      cmake -DCMAKE_BUILD_TYPE=RELEASE \
            -DCMAKE_INSTALL_PREFIX=$SNAPCRAFT_PART_INSTALL \
            -DBUILD_LIST=videoio,features2d,highgui,flann,python3 ..
      make -j$(nproc)
      make install
    build-packages:
      - build-essential
      - cmake
      - pkg-config
      - libjpeg-dev
      - libpng-dev
      - libtiff-dev
      - libavcodec-dev
      - libavformat-dev
      - libswscale-dev
      - libv4l-dev
      - libxvidcore-dev
      - libx264-dev
      - libgtk-3-dev
      - gfortran
      - python3-dev
      - python3-numpy
    stage-packages:
      - libjpeg8
      - libpng16-16
      - libtiff5
      - libavcodec58
      - libavformat58
      - libfreetype6
      - libswscale5
      - libv4l-0
      - libxvidcore4
      - libx264-dev
      - python3-minimal
      - python3.10-minimal
      - python3-numpy
################################################################################
  gnome-randr:
    source: https://github.com/maxwellainatchi/gnome-randr-rust.git
    plugin: rust
    build-packages:
      - libdbus-1-dev
    after: [rust-deps]
################################################################################
  rust-deps:
    plugin: nil
    build-packages:
      - wget
    override-pull: |
      # Do not use rustup to work around https://forum.snapcraft.io/t/armhf-builds-on-launchpad-timing-out/31008
      REQUIRED_RUST_VERSION=nightly
      ROOT=https://static.rust-lang.org/dist/rust-$REQUIRED_RUST_VERSION
      if [ $SNAPCRAFT_TARGET_ARCH = "amd64" ]; then
        BINARIES_SUFFIX=x86_64-unknown-linux-gnu
      elif [ $SNAPCRAFT_TARGET_ARCH = "armhf" ]; then
        BINARIES_SUFFIX=armv7-unknown-linux-gnueabihf
      elif [ $SNAPCRAFT_TARGET_ARCH = "arm64" ]; then
        BINARIES_SUFFIX=aarch64-unknown-linux-gnu
      fi
      wget -O - $ROOT-$BINARIES_SUFFIX.tar.gz | tar -x -z --strip-components=1
      ./install.sh --prefix=/usr --destdir=$SNAPCRAFT_STAGE
################################################################################
  rpi-support-binaries:
    plugin: nil
    stage-packages:
      - on armhf:
        - libraspberrypi0
      - on arm64:
        - libraspberrypi0
    organize:
      usr/lib/lib*.so: usr/lib/$SNAPCRAFT_ARCH_TRIPLET/
################################################################################
  lk-boot-env:
    plugin: nil
    source: .
    override-pull: |
      snapcraftctl pull
      wget https://raw.githubusercontent.com/snapcore/snapd/master/include/lk/snappy_boot_common.h
      wget https://raw.githubusercontent.com/snapcore/snapd/master/include/lk/snappy_boot_v2.h
      wget https://raw.githubusercontent.com/kubiko/dragonboard-gadget/20-lk/snap-boot-sel/lk-boot-env.c
    build-packages:
      - wget
      - on amd64 to armhf:
        - gcc-arm-linux-gnueabihf:amd64
      - on amd64 to arm64:
        - gcc-aarch64-linux-gnu:amd64
    override-build: |
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin
      if [ "${SNAPCRAFT_ARCH_TRIPLET}" = "arm-linux-gnueabihf" ]; then
          arm-linux-gnueabihf-gcc lk-boot-env.c -I/usr/include/ -Iapp/aboot -o ${SNAPCRAFT_PART_INSTALL}/bin/lk-boot-env
      elif [ "${SNAPCRAFT_ARCH_TRIPLET}" = "aarch64-linux-gnu" ]; then
          aarch64-linux-gnu-gcc lk-boot-env.c -I/usr/include/ -Iapp/aboot -o ${SNAPCRAFT_PART_INSTALL}/bin/lk-boot-env
      else
          # native build
          gcc lk-boot-env.c -I/usr/include/ -Iapp/aboot -o ${SNAPCRAFT_PART_INSTALL}/bin/lk-boot-env
      fi
################################################################################
  parts-meta-info:
    plugin: nil
    build-environment:
      - RUNTIME_VERSION: "$(cat $SNAPCRAFT_STAGE/version.txt)"
    override-build: |
      snapcraftctl build
      echo "checkbox-runtime:" >> $SNAPCRAFT_PART_INSTALL/parts_meta_info
      echo "$RUNTIME_VERSION" >> $SNAPCRAFT_PART_INSTALL/parts_meta_info
    after: [checkbox-provider-certification-server]
################################################################################
  common-config:
    plugin: dump
    source: config/
