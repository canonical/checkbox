name: checkbox
summary: Checkbox test runner
description: |
  Checkbox is a flexible test automation software.
  Itâ€™s the main tool used in Ubuntu Certification program.
adopt-info: version-calculator
grade: stable
confinement: strict

base: core18

plugs:
  checkbox-runtime:
    interface: content
    target: $SNAP/checkbox-runtime
    default-provider: checkbox18
  provider-resource:
    interface: content
    target: $SNAP/providers/checkbox-provider-resource
    default-provider: checkbox18
  provider-checkbox:
    interface: content
    target: $SNAP/providers/checkbox-provider-checkbox
    default-provider: checkbox18
  provider-docker:
    interface: content
    target: $SNAP/providers/checkbox-provider-docker
    default-provider: checkbox18
  provider-tpm2:
    interface: content
    target: $SNAP/providers/checkbox-provider-tpm2
    default-provider: checkbox18
  provider-sru:
    interface: content
    target: $SNAP/providers/checkbox-provider-sru
    default-provider: checkbox18
  provider-gpgpu:
    interface: content
    target: $SNAP/providers/checkbox-provider-gpgpu
    default-provider: checkbox18
  provider-certification-client:
    interface: content
    target: $SNAP/providers/checkbox-provider-certification-client
    default-provider: checkbox18
  provider-certification-server:
    interface: content
    target: $SNAP/providers/checkbox-provider-certification-server
    default-provider: checkbox18

apps:
  checkbox-cli:
    command-chain: [bin/wrapper_local]
    command: bin/checkbox-cli-wrapper
    plugs: &standard [home, network-bind, hardware-observe, bluez, bluetooth-control,
      gpio, modem-manager, mount-observe, network-manager, pulseaudio, serial-port,
      system-observe, tpm, udisks2]
  test-runner:
    command-chain: [bin/wrapper_local]
    command: bin/test-runner
    plugs: *standard
  sru:
    command-chain: [bin/wrapper_local]
    command: bin/sru
    plugs: *standard
  client-cert-iot-ubuntucore:
    command-chain: [bin/wrapper_local]
    command: bin/client-cert-iot-ubuntucore
    plugs: *standard
  odm-certification:
    command-chain: [bin/wrapper_local]
    command: bin/odm-certification-app
    plugs: *standard
  configure:
    command: bin/configure
  agent:
    command-chain: [bin/wrapper_local]
    command: bin/checkbox-cli-wrapper run-agent
    daemon: simple
    restart-condition: always
    restart-delay: 1s
    plugs: *standard
  shell:
    command-chain: [bin/wrapper_local]
    command: bin/shell-wrapper
    plugs: *standard

passthrough:
  hooks:
    configure:
      command-chain: [bin/wrapper_local]

parts:
  version-calculator:
    plugin: dump
    source: .
    override-pull: |
      snapcraftctl pull
      # version.txt created by prepare.sh
      export version=`cat $SNAPCRAFT_PART_SRC/version.txt`
      [ $version ] || exit 1
      snapcraftctl set-version $version
    stage:
      - version.txt
  launchers:
    plugin: dump
    source: launchers/
    organize:
      '*': bin/
  config-variables:
    plugin: dump
    source: .
    stage: [config_vars]
  workaround-automated-review-issue:
    plugin: nil
    override-build: |
      # This is a workaround for an upstream bug in the automated snap review tool
      # remove this once this issue is resolved:
      # https://bugs.launchpad.net/review-tools/+bug/2049093
      # Note: this cats /dev/urandom because the squashfs will collapse any
      #       predictable output to less than the desired size making this
      #       ineffective
      echo "This file is a workaround for a bug in the automated snap review tool" > $SNAPCRAFT_PART_INSTALL/size_workaround
      echo "this only contains random bytes to pad the snap to 16kb" >> $SNAPCRAFT_PART_INSTALL/size_workaround
      echo "see: https://bugs.launchpad.net/review-tools/+bug/2049093" >>  $SNAPCRAFT_PART_INSTALL/size_workaround
      cat /dev/urandom | head -c 16384 >> $SNAPCRAFT_PART_INSTALL/size_workaround
