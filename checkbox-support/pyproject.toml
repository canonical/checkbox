[build-system]
  requires = ['setuptools>=42', 'setuptools_scm[toml]>=3.4']
  build-backend = "setuptools.build_meta"
[project]
  name='checkbox-support'
  authors = [
      {name = 'Sylvain Pineau', email = 'sylvain.pineau@canonical.com'}
  ]
  license={'text' = 'GPLv3'}
  description='CheckBox support library'
  dynamic = ["version"]
  dependencies=[
    'pyparsing>=2.2.0',
    'requests>=1.0',
    'distro>=1.0',
    'requests_unixsocket>=0.1.2; python_version>="3.5" and python_version<="3.11"',
    'requests_unixsocket2; python_version>="3.12"',
    'importlib_metadata; python_version<"3.8"',
    'pyyaml',
  ]
[metadata]
  long_description={'file' = 'README.md'}
  long_description_content_type='text/x-rst'
[project.optional-dependencies]
# this is the prod setup for provisioning from source. The versions are
# pinned to the jammy universe because that is what testflinger agent uses
jammy_prod = [ # Note: ancient versions of pip fail to see this section, use pipx!
  'certifi==2020.6.20',
  'charset-normalizer==2.0.6',
  'distro==1.7.0',
  'idna==2.10', # universe is 3.3 but it is incompatible with requests
  'pyparsing==2.4.7',
  'requests==2.25.1',
  'distro==1.7.0',
  'requests_unixsocket==0.2.0',
  'pyyaml==6.0', # universe is 5.4.1 but it doesn't install anymore (cython issue)
  'urllib3==1.26.5', # called python3-yaml in universe
  'numpy==1.21.5',
  'opencv==4.5.4'
]
# useful to get up to date packages and future version of testflinger agent
noble_prod = [
  'certifi==2023.11.17',
  'charset-normalizer==3.3.2',
  'distro==1.9.0',
  'idna==3.6',
  'pyparsing==3.1.1',
  'PyYAML==6.0.1',
  'requests==2.31.0',
  'requests-unixsocket==0.3.0',
  'urllib3==2.0.7',
  'numpy==1.26.4',
  'opencv-python==4.6.0.66'
]
[tool.black]
  line-length = 79
  # Exclude vendorized code (e.g. the stuff in checkbox_support/vendor)
  extend-exclude = "/vendor/"
[tool.setuptools_scm]
  root=".."
[tool.setuptools.packages.find]
  exclude = ["debian*", "build*", "dist*"]
[project.scripts]
  checkbox-support-run_watcher = "checkbox_support.scripts.run_watcher:main"
  checkbox-support-fwts_test = "checkbox_support.scripts.fwts_test:main"
  checkbox-support-usb_read_write = "checkbox_support.scripts.usb_read_write:run_read_write_test"
  checkbox-support-nmea_test = "checkbox_support.scripts.nmea_test:main"
  checkbox-support-snap_connect = "checkbox_support.scripts.snap_connect:main"
  checkbox-support-eddystone_scanner = "checkbox_support.scripts.eddystone_scanner:main"
  checkbox-support-lsusb = "checkbox_support.scripts.lsusb:main"
  checkbox-support-parse = "checkbox_support.parsers:main"
  checkbox-support-image_checker = "checkbox_support.scripts.image_checker:main"
  checkbox-support-pipewire-utils = "checkbox_support.scripts.pipewire_utils:main"
[project.entry-points."plainbox.parsers"]
  pactl-list="checkbox_support.parsers.pactl:parse_pactl_output"
  udevadm="checkbox_support.parsers.udevadm:parse_udevadm_output"
  modprobe="checkbox_support.parsers.modprobe:parse_modprobe_d_output"
  pci-subsys-id="checkbox_support.parsers.pci_config:parse_pci_subsys_id"
  dkms-info="checkbox_support.parsers.dkms_info:parse_dkms_info"
  dmidecode="checkbox_support.parsers.dmidecode:parse_dmidecode_output"
  modinfo="checkbox_support.parsers.modinfo:parse_modinfo_attachment_output"
  buildstamp="checkbox_support.parsers.image_info:parse_buildstamp_attachment_output"
  recovery-info="checkbox_support.parsers.image_info:parse_recovery_info_attachment_output"
  bto="checkbox_support.parsers.image_info:parse_bto_attachment_output"
  kernelcmdline="checkbox_support.parsers.kernel_cmdline:parse_kernel_cmdline"
