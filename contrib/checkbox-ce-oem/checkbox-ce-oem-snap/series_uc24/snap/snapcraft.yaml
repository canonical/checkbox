name: checkbox-ce-oem
summary: Checkbox CE OEM test runner and public providers
description: "Checkbox CE OEM test runner and public providers"
confinement: strict
grade: stable

version: '1.0-noble'

base: core24

plugs:
  checkbox-runtime:
    interface: content
    target: $SNAP/checkbox-runtime
    default-provider: checkbox24
  provider-resource:
    interface: content
    target: $SNAP/providers/checkbox-provider-resource
    default-provider: checkbox24
  provider-checkbox:
    interface: content
    target: $SNAP/providers/checkbox-provider-checkbox
    default-provider: checkbox24
  provider-tpm2:
    interface: content
    target: $SNAP/providers/checkbox-provider-tpm2
    default-provider: checkbox24
  provider-docker:
    interface: content
    target: $SNAP/providers/checkbox-provider-docker
    default-provider: checkbox24
  provider-certification-client:
    interface: content
    target: $SNAP/providers/checkbox-provider-certification-client
    default-provider: checkbox24
apps:
  checkbox-cli:
    command-chain: [bin/wrapper_local]
    command: bin/checkbox-cli-wrapper
    plugs: &standard [home, network-bind, hardware-observe, bluez, bluetooth-control,
      gpio, modem-manager, mount-observe, network-manager, pulseaudio, serial-port,
      system-observe, tpm, timezone-control, timeserver-control]
  configure:
    command-chain: [bin/wrapper_local]
    command: bin/configure
  remote-slave:
    command-chain: [bin/wrapper_local]
    command: bin/checkbox-cli-wrapper slave
    daemon: simple
    restart-condition: on-failure
    plugs: *standard
  shell:
    command-chain: [bin/wrapper_local]
    command: bin/shell-wrapper
    plugs: *standard
  test-runner:
    command-chain: [bin/wrapper_local]
    command: bin/test-runner
    plugs: *standard

passthrough:
  hooks:
    configure:
      command-chain: [bin/wrapper_local]

slots:
  provider-ce-oem:
    interface: content
    read:
      - $SNAP/providers/checkbox-provider-ce-oem

parts:
  checkbox-provider-ce-oem:
    plugin: dump
    source: ../../checkbox-provider-ce-oem
    source-type: local
    stage-packages:
      - alsa-utils
      - mtd-utils
      - u-boot-tools
      - v4l-utils
      - device-tree-compiler
      - linuxptp
      - snmp
    override-prime: |
      craftctl default
      rm lib/systemd/system/alsa-utils.service
    override-build: |
      export PYTHONPATH=/snap/checkbox24/current/lib/python3.12/site-packages/
      for path in $(find "/snap/checkbox24/current/providers/" -mindepth 1 -maxdepth 1 -type d); do export PROVIDERPATH=$path${PROVIDERPATH:+:$PROVIDERPATH}; done
      python3 manage.py validate
      python3 manage.py build
      python3 manage.py install --layout=relocatable --prefix=/providers/checkbox-provider-ce-oem --root="$CRAFT_PART_INSTALL"
    build-snaps:
      - checkbox24
    build-packages:
      - python3-dev
      - python3-jinja2
      - python3-packaging
      - python3-urwid
      - python3-xlsxwriter
      - python3-requests-oauthlib
  input-pcspkr:
    plugin: nil
    after: [checkbox-provider-ce-oem]
    build-packages:
      - gcc
      - libc6-dev
    override-build: |
      mkdir -p ${CRAFT_PART_INSTALL}/usr/bin
      PART_SRC=${CRAFT_PROJECT_DIR}/parts/checkbox-provider-ce-oem/src
      gcc ${PART_SRC}/src/input-pcspkr.c -o ${PART_SRC}/src/beep
      cp -v ${PART_SRC}/src/beep ${CRAFT_PART_INSTALL}/usr/bin/
  spidev-test:
    plugin: make
    source: https://github.com/torvalds/linux.git
    source-type: git
    source-depth: 1
    source-subdir: tools/spi
  parts-meta-info:
    plugin: nil
    override-build: |
      craftctl default
      for p in `ls -d ../../*`; do
          if [ -d $p/src ]; then
            (cd $p/src
                if [ -d $p/src/.git ]; then
                    (echo `basename $p`\: && git show --pretty=format:"%h%d %aN %ci%n%s%n" -q ; echo ) >> $CRAFT_PART_INSTALL/parts_meta_info
                fi # for additional `source-type` support, elif them here
            )
          fi
      done
    after: [checkbox-provider-ce-oem]
  launchers:
    plugin: dump
    source: launchers/
    organize:
      '*': bin/
  config-variables:
    plugin: dump
    source: config/

layout:
  # This is an workaround to access alsa config on UC24 core image
  /usr/share/alsa:
    bind: $SNAP/usr/share/alsa
