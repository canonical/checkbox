job_queue: REPLACE_QUEUE
output_timeout: 1800
provision_data:
  REPLACE_PROVISION_DATA
test_data:
  attachments:
    - local: REPLACE_CB_DSS_SNAP
    - local: REPLACE_LAUNCHER
  test_cmds: |

    # Exit immediately if a test fails
    set -e

    # Constants
    CHECKBOX_RUNTIME="checkbox22"
    RESOURCES_PATH="attachments/test"
    TOOLS_PATH=tools

    # Retrieve cert-tools
    curl -Ls -o install_tools.sh https://raw.githubusercontent.com/canonical/certification-lab-ci-tools/main/install_tools.sh
    source install_tools.sh $TOOLS_PATH --branch main

    wait_for_ssh
    _run clean_machine --im-sure

    _run install_packages git
    wait_for_ssh

    # Install runtime and provider on device
    echo "Installing checkbox runtime on device (from snap)"
    _run sudo snap install $CHECKBOX_RUNTIME --no-wait

    echo "Installing checkbox-dss snap from attachment"
    _put $RESOURCES_PATH/REPLACE_CB_DSS_SNAP :
    _run sudo snap install --dangerous --classic ./REPLACE_CB_DSS_SNAP --no-wait

    wait_for_snap_changes
    echo "Available snaps on device"
    _run sudo snap list

    # Restart the checkbox service just in case
    _run sudo systemctl restart snap.checkbox-dss.remote-slave.service
    check_for_checkbox_service --debug || exit 1

    # Sync Checkbox version between agent and device
    CHECKBOX_VERSION=$(_run checkbox-dss.checkbox-cli --version)
    [ -z "$CHECKBOX_VERSION" ] && echo "Error: Unable to retrieve Checkbox version from device" && exit 1
    echo "Installing checkbox $CHECKBOX_VERSION on agent container from source"
    install_checkbox_agent_source $CHECKBOX_VERSION $TOOLS_PATH

    # Install dependencies on device for running checkbox-dss tests
    # XXX:@motjuste: to be moved to Checkbox setup phase
    _run wait_for_packages_complete
    _run checkbox-dss.install-deps --dss-snap-channel REPLACE_DSS_CHANNEL --microk8s-snap-channel REPLACE_MICROK8S_CHANNEL
    _run wait_for_packages_complete
    wait_for_ssh

    # run the test plan
    PYTHONUNBUFFERED=1 checkbox-cli control $DEVICE_IP $RESOURCES_PATH/REPLACE_LAUNCHER
    EXITCODE=$?

    # XXX:@motjuste: gather artifacts

    exit $EXITCODE
