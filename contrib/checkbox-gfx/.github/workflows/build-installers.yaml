name: "Build Installers"

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Ubuntu version of the runner'
        required: true
        default: 'noble'
        type: choice
        options:
          - jammy
          - noble

      arch:
        description: 'Architecture of the runner'
        required: true
        default: 'amd64'
        type: choice
        options:
          - amd64
          - arm64

  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  # Job to detect which files have changed
  changes:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      vulkan: ${{ steps.changes.outputs.vulkan }}
      opencl: ${{ steps.changes.outputs.opencl }}
      opengl: ${{ steps.changes.outputs.opengl }}
      crucible: ${{ steps.changes.outputs.crucible }}
      lvl-zero: ${{ steps.changes.outputs.lvl-zero }}
      lvl-zero-rt: ${{ steps.changes.outputs.lvl-zero-rt }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            vulkan:
              - 'bin/install-vulkan'
            opencl:
              - 'bin/install-opencl'
            opengl:
              - 'bin/install-opengl'
            crucible:
              - 'bin/install-crucible'
            lvl-zero:
              - 'bin/install-lvl-zero'
            lvl-zero-rt:
              - 'bin/install-lvl-zero-rt'

  manual-build:
    if: github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        test_name: [vulkan, opencl, opengl, crucible, lvl-zero, lvl-zero-rt]
    name: "Manual Build - ${{ matrix.test_name }}"
    runs-on: [self-hosted, linux, "${{ inputs.arch }}", "${{ inputs.version }}"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run install-${{ matrix.test_name }}
        shell: bash
        run: bin/install-${{ matrix.test_name }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "output-${{ matrix.test_name }}-\
          ${{ inputs.arch }}-${{ inputs.version }}"
          path: /usr/local/checkbox-gfx/*

  # The logic to combine these jobs got complicated
  # Using one per installer will be more maintainable
  pr-build-vulkan:
    needs: changes
    # needs.changes only runs if the event is a PR
    if: needs.changes.outputs.vulkan == 'true'
    strategy:
      matrix:
        arch: [amd64, arm64]
    name: "Installer testing - Vulkan CTS"
    runs-on: [self-hosted, linux, "${{ matrix.arch }}", noble]

    steps:
      - name: "Installers - Vulkan - ${{ matrix.arch }}"
        run: echo "Running Vulkan ${{ matrix.arch }} install"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run install-vulkan
        shell: bash
        run: bin/install-vulkan

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: output-vulkan-${{ matrix.arch }}
          path: /usr/local/checkbox-gfx/*

  pr-build-opencl:
    needs: changes
    # needs.changes only runs if the event is a PR
    if: needs.changes.outputs.opencl == 'true'
    strategy:
      matrix:
        arch: [amd64, arm64]
    name: "Installer testing - OpenCL CTS"
    runs-on: [self-hosted, linux, "${{ matrix.arch }}", noble]

    steps:
      - name: "Installers - OpenCL - ${{ matrix.arch }}"
        run: echo "Running OpenCL ${{ matrix.arch }} install"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run install-opencl
        shell: bash
        run: bin/install-opencl

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: output-opencl-${{ matrix.arch }}
          path: /usr/local/checkbox-gfx/*

  pr-build-opengl:
    needs: changes
    # needs.changes only runs if the event is a PR
    if: needs.changes.outputs.opengl == 'true'
    strategy:
      matrix:
        arch: [amd64, arm64]
    name: "Installer testing - OpenGL CTS"
    runs-on: [self-hosted, linux, "${{ matrix.arch }}", noble]

    steps:
      - name: "Installers - OpenGL - ${{ matrix.arch }}"
        run: echo "Running OpenGL ${{ matrix.arch }} install"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run install-opengl
        shell: bash
        run: bin/install-opengl

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: output-opengl-${{ matrix.arch }}
          path: /usr/local/checkbox-gfx/*

  pr-build-crucible:
    needs: changes
    # needs.changes only runs if the event is a PR
    if: needs.changes.outputs.crucible == 'true'
    strategy:
      matrix:
        arch: [amd64, arm64]
    name: "Installer testing - Crucible"
    runs-on: [self-hosted, linux, "${{ matrix.arch }}", noble]

    steps:
      - name: "Installers - Crucible - ${{ matrix.arch }}"
        run: echo "Running Crucible ${{ matrix.arch }} install"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run install-crucible
        shell: bash
        run: bin/install-crucible

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: output-crucible-${{ matrix.arch }}
          path: /usr/local/checkbox-gfx/*

pr-build-lvl-zero:
    needs: changes
    # needs.changes only runs if the event is a PR
    if: needs.changes.outputs.lvl-zero == 'true'
    strategy:
      matrix:
        arch: [amd64, arm64]
    name: "Installer testing - Level Zero"
    runs-on: [self-hosted, linux, "${{ matrix.arch }}", noble]

    steps:
      - name: "Installers - Level Zero - ${{ matrix.arch }}"
        run: echo "Running Level Zero ${{ matrix.arch }} install"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run install-lvl-zero
        shell: bash
        run: bin/install-lvl-zero

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: output-lvl-zero-${{ matrix.arch }}
          path: /usr/local/checkbox-gfx/*

pr-build-lvl-zero-rt:
    needs: changes
    # needs.changes only runs if the event is a PR
    if: needs.changes.outputs.lvl-zero-rt == 'true'
    strategy:
      matrix:
        arch: [amd64, arm64]
    name: "Installer testing - Level Zero Raytracing"
    runs-on: [self-hosted, linux, "${{ matrix.arch }}", noble]

    steps:
      - name: "Installers - Level Zero Raytracing - ${{ matrix.arch }}"
        run: echo "Running Level Zero Raytracing ${{ matrix.arch }} install"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run install-lvl-zero-rt
        shell: bash
        run: bin/install-lvl-zero-rt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: output-lvl-zero-rt-${{ matrix.arch }}
          path: /usr/local/checkbox-gfx/*
