id: gfx_mesa_vk_api
category_id: mesa
flags: simple
user: root
_summary: Run the api tests from VK-GL-CTS
environ:
  # necessary for local mode
  XDG_SESSION_TYPE
  XDG_RUNTIME_DIR
estimated_duration: 8h
command: run_vulkan_cts.py --test_file api.txt
_siblings: [
  { "id": "gfx_mesa_vk_binding-model",
    "_summary": "Run the binding-model tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file binding-model.txt" },
  { "id": "gfx_mesa_vk_clipping",
    "_summary": "Run the clipping tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file clipping.txt" },
  { "id": "gfx_mesa_vk_compute",
    "_summary": "Run the compute tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file compute.txt" },
  { "id": "gfx_mesa_vk_conditional-rendering",
    "_summary": "Run the conditional-rendering tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file conditional-rendering.txt" },
  { "id": "gfx_mesa_vk_depth",
    "_summary": "Run the depth tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file depth.txt" },
  { "id": "gfx_mesa_vk_descriptor-indexing",
    "_summary": "Run the descriptor-indexing tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file descriptor-indexing.txt" },
  { "id": "gfx_mesa_vk_device-group",
    "_summary": "Run the device-group tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file device-group.txt" },
  { "id": "gfx_mesa_vk_dgc",
    "_summary": "Run the dgc tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file dgc.txt" },
  { "id": "gfx_mesa_vk_draw",
    "_summary": "Run the draw tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file draw.txt" },
  { "id": "gfx_mesa_vk_drm-format-modifiers",
    "_summary": "Run the drm-format-modifiers tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file drm-format-modifiers.txt" },
  { "id": "gfx_mesa_vk_dynamic-rendering",
    "_summary": "Run the dynamic-rendering tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file dynamic-rendering.txt" },
  { "id": "gfx_mesa_vk_dynamic-state",
    "_summary": "Run the dynamic-state tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file dynamic-state.txt" },
  { "id": "gfx_mesa_vk_fragment-operations",
    "_summary": "Run the fragment-operations tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file fragment-operations.txt" },
  { "id": "gfx_mesa_vk_fragment-shader-interlock",
    "_summary": "Run the fragment-shader-interlock tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file fragment-shader-interlock.txt" },
  { "id": "gfx_mesa_vk_fragment-shading-barycentric",
    "_summary": "Run the fragment-shading-barycentric tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file fragment-shading-barycentric.txt" },
  { "id": "gfx_mesa_vk_fragment-shading-rate",
    "_summary": "Run the fragment-shading-rate tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file fragment-shading-rate.txt" },
  { "id": "gfx_mesa_vk_geometry",
    "_summary": "Run the geometry tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file geometry.txt" },
  { "id": "gfx_mesa_vk_glsl",
    "_summary": "Run the glsl tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file glsl.txt" },
  { "id": "gfx_mesa_vk_graphicsfuzz",
    "_summary": "Run the graphicsfuzz tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file graphicsfuzz.txt" },
  { "id": "gfx_mesa_vk_image/astc-decode-mode",
    "_summary": "Run the image/astc-decode-mode tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/astc-decode-mode.txt" },
  { "id": "gfx_mesa_vk_image/atomic-operations",
    "_summary": "Run the image/atomic-operations tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/atomic-operations.txt" },
  { "id": "gfx_mesa_vk_image/concurrent-copy",
    "_summary": "Run the image/concurrent-copy tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/concurrent-copy.txt" },
  { "id": "gfx_mesa_vk_image/depth-stencil-descriptor",
    "_summary": "Run the image/depth-stencil-descriptor tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/depth-stencil-descriptor.txt" },
  { "id": "gfx_mesa_vk_image/depth-stencil-separate-access",
    "_summary": "Run the image/depth-stencil-separate-access tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/depth-stencil-separate-access.txt" },
  { "id": "gfx_mesa_vk_image/device-scope-access",
    "_summary": "Run the image/device-scope-access tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/device-scope-access.txt" },
  { "id": "gfx_mesa_vk_image/extend-operands-spirv1p4",
    "_summary": "Run the image/extend-operands-spirv1p4 tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/extend-operands-spirv1p4.txt" },
  { "id": "gfx_mesa_vk_image/extended-usage-bit",
    "_summary": "Run the image/extended-usage-bit tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/extended-usage-bit.txt" },
  { "id": "gfx_mesa_vk_image/extended-usage-bit-compatibility",
    "_summary": "Run the image/extended-usage-bit-compatibility tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/extended-usage-bit-compatibility.txt" },
  { "id": "gfx_mesa_vk_image/format-reinterpret",
    "_summary": "Run the image/format-reinterpret tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/format-reinterpret.txt" },
  { "id": "gfx_mesa_vk_image/host-image-copy",
    "_summary": "Run the image/host-image-copy tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/host-image-copy.txt" },
  { "id": "gfx_mesa_vk_image/image-size",
    "_summary": "Run the image/image-size tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/image-size.txt" },
  { "id": "gfx_mesa_vk_image/load-store",
    "_summary": "Run the image/load-store tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/load-store.txt" },
  { "id": "gfx_mesa_vk_image/load-store-lod",
    "_summary": "Run the image/load-store-lod tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/load-store-lod.txt" },
  { "id": "gfx_mesa_vk_image/load-store-multisample",
    "_summary": "Run the image/load-store-multisample tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/load-store-multisample.txt" },
  { "id": "gfx_mesa_vk_image/misaligned-cube",
    "_summary": "Run the image/misaligned-cube tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/misaligned-cube.txt" },
  { "id": "gfx_mesa_vk_image/mismatched-formats",
    "_summary": "Run the image/mismatched-formats tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/mismatched-formats.txt" },
  { "id": "gfx_mesa_vk_image/mismatched-write-op",
    "_summary": "Run the image/mismatched-write-op tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/mismatched-write-op.txt" },
  { "id": "gfx_mesa_vk_image/mutable",
    "_summary": "Run the image/mutable tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/mutable.txt" },
  { "id": "gfx_mesa_vk_image/nontemporal-operand",
    "_summary": "Run the image/nontemporal-operand tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/nontemporal-operand.txt" },
  { "id": "gfx_mesa_vk_image/qualifiers",
    "_summary": "Run the image/qualifiers tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/qualifiers.txt" },
  { "id": "gfx_mesa_vk_image/queue-transfer",
    "_summary": "Run the image/queue-transfer tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/queue-transfer.txt" },
  { "id": "gfx_mesa_vk_image/sample-cubemap",
    "_summary": "Run the image/sample-cubemap tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/sample-cubemap.txt" },
  { "id": "gfx_mesa_vk_image/sample-texture",
    "_summary": "Run the image/sample-texture tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/sample-texture.txt" },
  { "id": "gfx_mesa_vk_image/store",
    "_summary": "Run the image/store tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/store.txt" },
  { "id": "gfx_mesa_vk_image/subresource-layout",
    "_summary": "Run the image/subresource-layout tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/subresource-layout.txt" },
  { "id": "gfx_mesa_vk_image/swapchain-mutable",
    "_summary": "Run the image/swapchain-mutable tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/swapchain-mutable.txt" },
  { "id": "gfx_mesa_vk_image/texel-view-compatible",
    "_summary": "Run the image/texel-view-compatible tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file image/texel-view-compatible.txt" },
  { "id": "gfx_mesa_vk_imageless-framebuffer",
    "_summary": "Run the imageless-framebuffer tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file imageless-framebuffer.txt" },
  { "id": "gfx_mesa_vk_info",
    "_summary": "Run the info tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file info.txt" },
  { "id": "gfx_mesa_vk_memory",
    "_summary": "Run the memory tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file memory.txt" },
  { "id": "gfx_mesa_vk_memory-model",
    "_summary": "Run the memory-model tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file memory-model.txt" },
  { "id": "gfx_mesa_vk_mesh-shader",
    "_summary": "Run the mesh-shader tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file mesh-shader.txt" },
  { "id": "gfx_mesa_vk_multiview",
    "_summary": "Run the multiview tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file multiview.txt" },
  { "id": "gfx_mesa_vk_pipeline/fast-linked-library",
    "_summary": "Run the pipeline/fast-linked-library tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file pipeline/fast-linked-library.txt" },
  { "id": "gfx_mesa_vk_pipeline/monolithic",
    "_summary": "Run the pipeline/monolithic tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file pipeline/monolithic.txt" },
  { "id": "gfx_mesa_vk_pipeline/pipeline-library",
    "_summary": "Run the pipeline/pipeline-library tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file pipeline/pipeline-library.txt" },
  { "id": "gfx_mesa_vk_pipeline/shader-object-linked-binary",
    "_summary": "Run the pipeline/shader-object-linked-binary tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file pipeline/shader-object-linked-binary.txt" },
  { "id": "gfx_mesa_vk_pipeline/shader-object-linked-spirv",
    "_summary": "Run the pipeline/shader-object-linked-spirv tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file pipeline/shader-object-linked-spirv.txt" },
  { "id": "gfx_mesa_vk_pipeline/shader-object-unlinked-binary",
    "_summary": "Run the pipeline/shader-object-unlinked-binary tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file pipeline/shader-object-unlinked-binary.txt" },
  { "id": "gfx_mesa_vk_pipeline/shader-object-unlinked-spirv",
    "_summary": "Run the pipeline/shader-object-unlinked-spirv tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file pipeline/shader-object-unlinked-spirv.txt" },
  { "id": "gfx_mesa_vk_protected-memory",
    "_summary": "Run the protected-memory tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file protected-memory.txt" },
  { "id": "gfx_mesa_vk_query-pool",
    "_summary": "Run the query-pool tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file query-pool.txt" },
  { "id": "gfx_mesa_vk_rasterization",
    "_summary": "Run the rasterization tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file rasterization.txt" },
  { "id": "gfx_mesa_vk_ray-query",
    "_summary": "Run the ray-query tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file ray-query.txt" },
  { "id": "gfx_mesa_vk_ray-tracing-pipeline",
    "_summary": "Run the ray-tracing-pipeline tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file ray-tracing-pipeline.txt" },
  { "id": "gfx_mesa_vk_reconvergence",
    "_summary": "Run the reconvergence tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file reconvergence.txt" },
  { "id": "gfx_mesa_vk_renderpass",
    "_summary": "Run the renderpass tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file renderpass.txt" },
  { "id": "gfx_mesa_vk_renderpass2",
    "_summary": "Run the renderpass2 tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file renderpass2.txt" },
  { "id": "gfx_mesa_vk_robustness",
    "_summary": "Run the robustness tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file robustness.txt" },
  { "id": "gfx_mesa_vk_shader-object/api",
    "_summary": "Run the shader-object/api tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file shader-object/api.txt" },
  { "id": "gfx_mesa_vk_shader-object/binary",
    "_summary": "Run the shader-object/binary tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file shader-object/binary.txt" },
  { "id": "gfx_mesa_vk_shader-object/binding",
    "_summary": "Run the shader-object/binding tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file shader-object/binding.txt" },
  { "id": "gfx_mesa_vk_shader-object/create",
    "_summary": "Run the shader-object/create tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file shader-object/create.txt" },
  { "id": "gfx_mesa_vk_shader-object/link",
    "_summary": "Run the shader-object/link tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file shader-object/link.txt" },
  { "id": "gfx_mesa_vk_shader-object/misc",
    "_summary": "Run the shader-object/misc tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file shader-object/misc.txt" },
  { "id": "gfx_mesa_vk_shader-object/pipeline-interaction",
    "_summary": "Run the shader-object/pipeline-interaction tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file shader-object/pipeline-interaction.txt" },
  { "id": "gfx_mesa_vk_shader-object/rendering",
    "_summary": "Run the shader-object/rendering tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file shader-object/rendering.txt" },
  { "id": "gfx_mesa_vk_sparse-resources",
    "_summary": "Run the sparse-resources tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file sparse-resources.txt" },
  { "id": "gfx_mesa_vk_spirv-assembly",
    "_summary": "Run the spirv-assembly tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file spirv-assembly.txt" },
  { "id": "gfx_mesa_vk_ssbo",
    "_summary": "Run the ssbo tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file ssbo.txt" },
  { "id": "gfx_mesa_vk_subgroups",
    "_summary": "Run the subgroups tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file subgroups.txt" },
  { "id": "gfx_mesa_vk_synchronization",
    "_summary": "Run the synchronization tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file synchronization.txt" },
  { "id": "gfx_mesa_vk_synchronization2",
    "_summary": "Run the synchronization2 tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file synchronization2.txt" },
  { "id": "gfx_mesa_vk_tessellation",
    "_summary": "Run the tessellation tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file tessellation.txt" },
  { "id": "gfx_mesa_vk_texture",
    "_summary": "Run the texture tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file texture.txt" },
  { "id": "gfx_mesa_vk_transform-feedback",
    "_summary": "Run the transform-feedback tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file transform-feedback.txt" },
  { "id": "gfx_mesa_vk_ubo",
    "_summary": "Run the ubo tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file ubo.txt" },
  { "id": "gfx_mesa_vk_video",
    "_summary": "Run the video tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file video.txt" },
  { "id": "gfx_mesa_vk_wsi",
    "_summary": "Run the wsi tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file wsi.txt" },
  { "id": "gfx_mesa_vk_ycbcr",
    "_summary": "Run the ycbcr tests from VK-GL-CTS",
    "command": "run_vulkan_cts.py --test_file ycbcr.txt" }
  ]
