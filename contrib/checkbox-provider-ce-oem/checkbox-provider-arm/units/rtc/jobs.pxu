id: rtc/rtc_number
_summary: Check the number of RTC as expected.
_description:
    Check the number of RTC on platform as expected.
plugin: shell
user: root
estimated_duration: 1.0
category_id: com.canonical.certification::rtc_category
command:
    if [ -z $TOTAL_RTC_NUM ]; then 
        TOTAL_RTC_NUM=1; 
    fi
    SYSFS_RTC_NUM=`ls /dev/rtc[0-9] | wc -l`
    echo "TOTAL_RTC_NUM: $TOTAL_RTC_NUM"
    echo "Number of RTC devices found in sysfs: $SYSFS_RTC_NUM"
    if [ $SYSFS_RTC_NUM != $TOTAL_RTC_NUM ]; then
        echo "RTC number mismatch"
        exit 1
    else
        echo "RTC number matched"
    fi
flags: also-after-suspend

id: rtc_list
_summary: Generates a rtc list for the platform
_description:
 List out all rtc devices on platform, and generate a list for it.
 Define TOTAL_RTC_NUM in config file if platform have more then one
 RTC deivces.
plugin: resource
user: root
estimated_duration: 1.0
category_id: com.canonical.certification::rtc_category
command:
    rtcs=$(ls /dev/rtc[0-9] | awk -F "/" '{print $3}')
    for c in ${rtcs}; do
        echo "rtc: ${c}"
        echo ""
    done

unit: template
template-resource: rtc_list
template-unit: job
id: rtc/rtc_alarm_{rtc}
_summary: RTC alarm of {rtc} is worked
_purpose:
    Check if RTC alarm of {rtc}
plugin: shell
user: root
category_id: com.canonical.certification::rtc_category
estimated_duration: 5
command: 
    if [ -f "/sys/class/rtc/{rtc}/device/power/wakeup" ]; then 
        rtcwake -d {rtc} -v -m on -s 30
    else 
        echo "{rtc} not support wakeup"
        exit 1 
    fi
flags: also-after-suspend

unit: template
template-resource: rtc_list
template-unit: job
id: rtc/rtc_clock_{rtc}
_summary: RTC clock of {rtc} is synced
_purpose:
    Check if RTC clock of {rtc}
plugin: shell
user: root
category_id: com.canonical.certification::rtc_category
estimated_duration: 5
command: 
    rtctime=$(date +"%s" -d "$( hwclock --rtc /dev/{rtc} -u)")
    rtc_date=$(date -d @$rtctime)
    systime=$(date +"%s")
    systime_date=$(date -d @$systime)
    result=$(($systime - $rtctime))
    if [[ $result -le "5" ]]; then
        echo "{rtc} Clock sync with System Clock"
        echo $rtc_date
    else
        echo "{rtc} Clock doesn't sync with System Clock"
        echo "System clock=" $systime_date
        echo "RTC clock=" $rtc_date
        exit 1
    fi
flags: also-after-suspend