id: ce-oem-serial/rs485-list
_summary: Generates a RS485 resource based on user supplied configuration
_description:
    A RS485 resource that relies on the user specifying the number of RS485 port.
    This is to allow template jobs to then be instantiated.
    Usage of parameter: {port1} {port2}
    RS485_PORTS=/dev/ttymxc1 /dev/ttymxc2
plugin: resource
estimated_duration: 1.0
command:
    for x in $RS485_PORTS; do
      echo "RS485: ${x}"
      echo ""
    done

unit: template
template-resource: ce-oem-serial/rs485-list
template-unit: job
id: ce-oem-serial/rs485-remote-{RS485}
_summary: To check the port {RS485} can working on RS485 half-duplex mode.
_purpose:
    To check the port {RS485} can send and receive the string with
    RS485 half-duplex mode.
_description:
    Have to connect the RS485 A on DUT to RS485 A on RPi 3 server,
    and RS485 B on DUT to RS485 B on RPi 3 server.
plugin: shell
user: root
category_id: com.canonical.certification::serial
estimated_duration: 30
flags: also-after-suspend
command: serial_test.py {RS485} --mode client
requires:
    manifest.has_rs485_server == 'True'
    manifest.has_rs485 == 'True'
imports: from com.canonical.plainbox import manifest
