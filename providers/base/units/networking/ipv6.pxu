id: ipv6_detect
category_id: com.canonical.plainbox::networking
_summary: Test if the kernel is IPv6 ready
_purpose: Test if the running kernel supports IPv6.
command:
  if test -f /proc/net/if_inet6; then
    echo "Running kernel is IPv6 ready"
    exit 0
  fi
  echo "/proc/net/if_inet6 not present"
  echo "Running kernel does not appear to be IPv6 ready"
  exit 1
flags: simple also-after-suspend

unit: template
template-resource: device
template-filter: device.category == 'NETWORK' and device.interface != 'UNKNOWN'
template-unit: job
depends: ipv6_detect
id: ipv6_link_local_address_{interface}
template-id: ipv6_link_local_address_interface
_summary: Test that {interface} has an IPv6 link local address
plugin: shell
category_id: com.canonical.plainbox::networking
imports: from com.canonical.plainbox import manifest
requires:
 manifest._ignore_disconnected_ethernet_interfaces == 'False'
command:
  IPV6_ADDR="$(ip -6 -o addr show dev {interface} scope link)"
  echo ip -6 -o addr show dev {interface} scope link
  echo "$IPV6_ADDR"
  echo
  COUNT=$(echo -n "$IPV6_ADDR" | grep -cve '^\s*$') # count non-empty lines
  if [ "$COUNT" -gt 0 ]; then
    echo PASS: At least one IPv6 address reported for interface {interface}
  else
    echo FAIL: No IPv6 address reported for the interface {interface}
    exit 1
  fi
flags: also-after-suspend

unit: job
depends: ipv6_detect
id: ipv6_link_local_address_any_if
_summary: Test that any interface has an IPv6 address
plugin: shell
category_id: com.canonical.plainbox::networking
imports: from com.canonical.plainbox import manifest
requires:
 manifest._ignore_disconnected_ethernet_interfaces == 'True'
command:
  IPV6_ADDR="$(ip -6 -o addr show scope link)"
  echo ip -6 -o addr show scope link
  echo "$IPV6_ADDR"
  echo
  COUNT=$(echo -n "$IPV6_ADDR" | grep -cve '^\s*$') # count non-empty lines
  if [ "$COUNT" -gt 0 ]; then
    echo PASS: At least 1 IPv6 reported
  else
    echo FAIL: No IPv6 address reported
    exit 1
  fi
flags: also-after-suspend
