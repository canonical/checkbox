id: rtc/battery
_summary: RTC battery tracks the time
_purpose:
 RTC battery backup power can send system wakeup event
_steps:
 1. Start the test to poweroff the system (wakeup scheduled in 30s)
_verification:
 RTC can wake up the system successfully
command:
 rtcwake -v -m disable
 rtcwake -v -m off -s 30
plugin: user-interact
user: root
category_id: rtc_category
estimated_duration: 40
flags: noreturn

id: rtc/rtc_number
_summary: Check the number of RTC as expected.
_description:
    Check the number of RTC on platform as expected.
plugin: shell
user: root
estimated_duration: 1.0
category_id: rtc_category
command:
    if [ -z "$TOTAL_RTC_NUM" ]; then
        echo "TOTAL_RTC_NUM not defined, defaulting to 1"
        TOTAL_RTC_NUM=1; 
    fi
    SYSFS_RTC_NUM=$(find /dev/ -name "rtc[0-9]" | wc -l)
    echo "TOTAL_RTC_NUM: $TOTAL_RTC_NUM"
    echo "Number of RTC devices found in sysfs: $SYSFS_RTC_NUM"
    if [ "$SYSFS_RTC_NUM" != "$TOTAL_RTC_NUM" ]; then
        echo "RTC number mismatch"
        exit 1
    else
        echo "RTC number matched"
    fi
flags: also-after-suspend
environ:  TOTAL_RTC_NUM

id: rtc_list
_summary: Generates a RTC list for the platform
_description:
 List out all RTC devices on platform, and generate a list for it.
plugin: resource
user: root
estimated_duration: 1.0
category_id: rtc_category
command:
    rtcs=$(find /dev/ -name "rtc[0-9]"| awk -F "/" '{print $3}')
    for c in ${rtcs}; do
        echo "rtc: ${c}"
        echo ""
    done

unit: template
template-resource: rtc_list
template-unit: job
id: rtc/rtc_alarm_{rtc}
_summary: Check that RTC alarm of {rtc} works
plugin: shell
user: root
category_id: rtc_category
estimated_duration: 40
command: 
    if [ -f "/sys/class/rtc/{rtc}/wakealarm" ]; then 
        rtcwake -d {rtc} -v -m on -s 30
    else 
        echo "{rtc} does not support wakealarm"
        exit 1 
    fi
flags: also-after-suspend

unit: template
template-resource: rtc_list
template-unit: job
id: rtc/rtc_clock_{rtc}
_summary: Check that {rtc} clock is synchronized with system clock
plugin: shell
user: root
category_id: rtc_category
estimated_duration: 5
command: 
    rtctime=$(date +"%s" -d "$( hwclock --rtc /dev/{rtc} -u)")
    rtc_date=$(date -d "@$rtctime")
    systime=$(date +"%s")
    systime_date=$(date -d "@$systime")
    result=$(("$systime" - "$rtctime"))
    if [[ "$result" -le "5" ]]; then
        echo "{rtc} Clock synchronized with System Clock"
        echo "$rtc_date"
    else
        echo "{rtc} Clock not synchronized with System Clock"
        echo "System clock=" "$systime_date"
        echo "RTC clock=" "$rtc_date"
        exit 1
    fi
flags: also-after-suspend
