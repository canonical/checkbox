id: snap_revision_info
plugin: resource
_summary:
 Gather name, tracking, and revision info of the kernel, snapd and gadget snaps
estimated_duration: 3s
category_id: snapd
command:
 snap_update_test.py --resource
_purpose: Gather name, tracking, and revision information of the kernel, snapd, and gadget snaps.

unit: template
template-resource: snap_revision_info
template-unit: job
id: snapd/snap-refresh-{type}-{name}-to-stable-rev
template-id: snapd/snap-refresh-type-name-to-stable-rev
_summary: Refresh {name} snap to latest revision in stable channel
_description:
_purpose:
 This test is currently for SUV process, the snap to be tested is on the beta
 channel. Test the availability to refresh to the older version on the stable
 channel. This test will be executed only when the current installed revision
 (on beta channel) is different from the revision in stable channel.
plugin: shell
estimated_duration: 1m
category_id: snapd
user: root
flags: noreturn
imports:
 from com.canonical.certification import snap_revision_info
 from com.canonical.plainbox import manifest
requires:
 (snap_revision_info.name == "{name}") and snap_revision_info.stable_rev != snap_revision_info.original_installed_rev
 manifest.need_{type}_snap_update_test == "True"
command:
 path="$PLAINBOX_SESSION_SHARE/{name}_snap_revision_info"
 logpath="$PLAINBOX_SESSION_SHARE/snap-refresh-{type}-{name}-to-stable-rev.log"
 snap_update_test.py --refresh --revision {stable_rev} --info-path "$path" {name} | tee "$logpath"
 reboot

unit: template
template-resource: snap_revision_info
template-unit: job
id: snapd/log-attach-after-snap-refresh-{type}-{name}-to-stable-rev
template-id: snapd/log-attach-after-snap-refresh-type-name-to-stable-rev
_summary: Attach logs after refreshing {name} snap to latest revision in stable channel
plugin: attachment
estimated_duration: 1s
category_id: snapd
after: snapd/snap-refresh-{type}-{name}-to-stable-rev
command:
 logpath="$PLAINBOX_SESSION_SHARE/snap-refresh-{type}-{name}-to-stable-rev.log"
 if [ -f "$logpath" ]; then
   cat "$logpath"
 fi

unit: template
template-resource: snap_revision_info
template-unit: job
id: snapd/snap-verify-after-refresh-{type}-{name}-to-stable-rev
template-id: snapd/snap-verify-after-refresh-type-name-to-stable-rev
_summary: Verify {name} snap revision after refreshing to latest revision in stable channel
plugin: shell
estimated_duration: 30s
category_id: snapd
user: root
depends: snapd/reboot-after-snap-refresh-{type}-{name}-to-stable-rev
command:
 path="$PLAINBOX_SESSION_SHARE/{name}_snap_revision_info"
 snap_update_test.py --verify-refresh --info-path "$path" {name}

unit: template
template-resource: snap_revision_info
template-unit: job
id: snapd/snap-revert-{type}-{name}-from-stable-rev
template-id: snapd/snap-revert-type-name-from-stable-rev
_summary: Revert {name} snap to original revision from stable channel
plugin: shell
flags: noreturn
estimated_duration: 3m
category_id: snapd
user: root
depends: snapd/snap-verify-after-refresh-{type}-{name}-to-stable-rev
command:
 path="$PLAINBOX_SESSION_SHARE/{name}_snap_revision_info"
 logpath="$PLAINBOX_SESSION_SHARE/snap-revert-{type}-{name}-from-stable-rev.log"
 snap_update_test.py --revert --info-path "$path" {name} | tee "$logpath"
 reboot

unit: template
template-resource: snap_revision_info
template-unit: job
id: snapd/log-attach-after-snap-revert-{type}-{name}-from-stable-rev
template-id: snapd/log-attach-after-snap-revert-type-name-from-stable-rev
_summary: Attach logs after reverting {name} snap to latest revision in stable channel
plugin: attachment
estimated_duration: 1s
category_id: snapd
after: snapd/snap-revert-{type}-{name}-from-stable-rev
command:
 logpath="$PLAINBOX_SESSION_SHARE/snap-revert-{type}-{name}-from-stable-rev.log"
 if [ -f "$logpath" ]; then
   cat "$logpath"
 fi

unit: template
template-resource: snap_revision_info
template-unit: job
id: snapd/snap-verify-after-revert-{type}-{name}-from-stable-rev
template-id: snapd/snap-verify-after-revert-type-name-from-stable-rev
_summary: Verify {name} snap revision after reverting from stable revision
plugin: shell
estimated_duration: 3s
category_id: snapd
user: root
depends: snapd/snap-revert-{type}-{name}-from-stable-rev
command:
 path="$PLAINBOX_SESSION_SHARE/{name}_snap_revision_info"
 snap_update_test.py --verify-revert --info-path "$path" {name}

unit: template
template-resource: snap_revision_info
template-unit: job
id: snapd/snap-refresh-{type}-{name}-to-base-rev
template-id: snapd/snap-refresh-type-name-to-base-rev
_summary: Refresh {name} snap to its base revision
_purpose:
 This test is currently for SUV process, the snap to be tested is on the beta
 channel. Test the availability to refresh to the base revision (the revision
 that came with the image). This job will be executed only when the current
 installed revision (on beta channel) is different from the base revision.
 This job (and the jobs depending on it) are useful when the device cannot
 be reprovisioned easily, but you still want to simulate a fresh install
 that would bump to the latest revision available.
plugin: shell
estimated_duration: 3m
category_id: snapd
user: root
flags: noreturn
imports:
 from com.canonical.certification import snap_revision_info
 from com.canonical.plainbox import manifest
requires:
 (snap_revision_info.name == "{name}") and snap_revision_info.base_rev != snap_revision_info.original_installed_rev
 manifest.need_{type}_snap_update_test == "True"
command:
 path="$PLAINBOX_SESSION_SHARE/{name}_snap_revision_info"
 logpath="$PLAINBOX_SESSION_SHARE/snap-refresh-{type}-{name}-to-base-rev.log"
 snap_update_test.py --refresh --revision {base_rev} --info-path "$path" {name} | tee "$logpath"
 reboot

unit: template
template-resource: snap_revision_info
template-unit: job
id: snapd/log-attach-after-snap-refresh-{type}-{name}-to-base-rev
template-id: snapd/log-attach-after-snap-refresh-type-name-to-base-rev
_summary: Attach logs after refreshing {name} snap to base revision
plugin: attachment
estimated_duration: 1s
category_id: snapd
after: snapd/snap-refresh-{type}-{name}-to-base-rev
command:
 logpath="$PLAINBOX_SESSION_SHARE/snap-refresh-{type}-{name}-to-base-rev.log"
 if [ -f "$logpath" ]; then
   cat "$logpath"
 fi

unit: template
template-resource: snap_revision_info
template-unit: job
id: snapd/snap-verify-after-refresh-{type}-{name}-to-base-rev
template-id: snapd/snap-verify-after-refresh-type-name-to-base-rev
_summary: Verify {name} snap revision after refreshing to base revision
plugin: shell
estimated_duration: 30s
category_id: snapd
user: root
depends: snapd/snap-refresh-{type}-{name}-to-base-rev
command:
 path="$PLAINBOX_SESSION_SHARE/{name}_snap_revision_info"
 snap_update_test.py --verify-refresh --info-path "$path" {name}

unit: template
template-resource: snap_revision_info
template-unit: job
id: snapd/snap-revert-{type}-{name}-from-base-rev
template-id: snapd/snap-revert-type-name-from-base-rev
_summary: Revert {name} snap from base revision to original revision
plugin: shell
flags: noreturn
estimated_duration: 3m
category_id: snapd
user: root
depends: snapd/snap-verify-after-refresh-{type}-{name}-to-base-rev
command:
 path="$PLAINBOX_SESSION_SHARE/{name}_snap_revision_info"
 logpath="$PLAINBOX_SESSION_SHARE/snap-revert-{type}-{name}-from-base-rev.log"
 snap_update_test.py --revert --info-path "$path" {name} | tee "$logpath"
 reboot

unit: template
template-resource: snap_revision_info
template-unit: job
id: snapd/log-attach-after-snap-revert-{type}-{name}-from-base-rev
template-id: snapd/log-attach-after-snap-revert-type-name-from-base-rev
_summary: Attach logs after reverting {name} snap to base revision
plugin: attachment
estimated_duration: 1s
category_id: snapd
user: root
after: snapd/snap-revert-{type}-{name}-from-base-rev
command:
 logpath="$PLAINBOX_SESSION_SHARE/snap-revert-{type}-{name}-from-base-rev.log"
 if [ -f "$logpath" ]; then
   cat "$logpath"
 fi

unit: template
template-resource: snap_revision_info
template-unit: job
id: snapd/snap-verify-after-revert-{type}-{name}-from-base-rev
template-id: snapd/snap-verify-after-revert-type-name-from-base-rev
_summary: Verify {name} snap revision after reverting from base revision
plugin: shell
estimated_duration: 3s
category_id: snapd
user: root
depends: snapd/snap-revert-{type}-{name}-from-base-rev
command:
 path="$PLAINBOX_SESSION_SHARE/{name}_snap_revision_info"
 snap_update_test.py --verify-revert --info-path "$path" {name}
