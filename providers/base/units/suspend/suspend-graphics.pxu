unit: template
template-resource: graphics_card
template-filter: graphics_card.prime_gpu_offload == 'Off'
plugin: shell
category_id: com.canonical.plainbox::suspend
id: suspend/{index}_resolution_before_suspend_{product_slug}_auto
after: graphics/{index}_auto_switch_card_{product_slug}
estimated_duration: 1.2
_description: Record the current resolution before suspending.
command:
 # shellcheck disable=SC1091
 source graphics_env.sh {driver} {index}
 xrandr -q | grep "[*]" | awk '{{print $1}}' > "$PLAINBOX_SESSION_SHARE"/{index}_resolution_before_suspend.txt

unit: template
template-resource: graphics_card
template-filter: graphics_card.prime_gpu_offload == 'Off'
plugin: shell
category_id: com.canonical.plainbox::suspend
id: suspend/{index}_suspend_after_switch_to_card_{product_slug}_auto
requires:
 sleep.mem == 'supported'
 rtc.state == 'supported'
after: graphics/{index}_auto_switch_card_{product_slug}
user: root
environ: PLAINBOX_SESSION_SHARE
command:
 if [[ -v SNAP ]]; then
     export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$SNAP/usr/lib/fwts"
 fi
 set -o pipefail; checkbox-support-fwts_test -f none -l "$PLAINBOX_SESSION_SHARE"/{index}_suspend_single.log -s s3 --s3-sleep-delay=30 --s3-device-check --s3-device-check-delay=45 | tee "$PLAINBOX_SESSION_SHARE"/{index}_suspend_single_times.log
estimated_duration: 1m30s
_summary: Test auto suspend/resume after switching to {vendor} {product}

unit: template
template-resource: graphics_card
template-filter: graphics_card.prime_gpu_offload == 'Off'
template-engine: jinja2
plugin: shell
category_id: com.canonical.plainbox::suspend
id: suspend/{{ index }}_resolution_after_suspend_{{ product_slug }}_auto
estimated_duration: 1.2
depends:
 suspend/{{ index }}_resolution_before_suspend_{{ product_slug }}_auto
 {%- if gpu_count > "1" %}
  suspend/{{ index }}_suspend_after_switch_to_card_{{ product_slug }}_auto
 {%- else %}
  suspend/suspend_advanced_auto
 {%- endif %}
_description: Test to see that we have the same resolution after resuming as before.
command:
 # shellcheck disable=SC1091
 source graphics_env.sh {{ driver }} {{ index }}
 xrandr -q | grep "[*]" | awk '{print $1}' | diff "$PLAINBOX_SESSION_SHARE"/{{ index }}_resolution_before_suspend.txt -

unit: template
template-resource: graphics_card
template-filter: graphics_card.prime_gpu_offload == 'Off'
template-engine: jinja2
plugin: manual
category_id: com.canonical.plainbox::suspend
id: suspend/{{ index }}_display_after_suspend_{{ product_slug }}_graphics
depends:
 {%- if gpu_count > "1" %}
  suspend/{{ index }}_suspend_after_switch_to_card_{{ product_slug }}_auto
 {%- else %}
  suspend/suspend_advanced_auto
 {%- endif %}
_summary: Test display function after suspend for {{ vendor }} {{ product }}
_description:
 PURPOSE:
     This test will check that the display is correct after suspend and resume on the {{ vendor }} {{ product }} graphics card.
 STEPS:
     1. Check that your display does not show up visual artifacts after resuming.
 VERIFICATION:
     Does the display work normally after resuming from suspend using the {{ vendor }} {{ product }} graphics card?

unit: template
template-resource: graphics_card
template-filter: graphics_card.prime_gpu_offload == 'Off'
template-engine: jinja2
plugin: user-interact-verify
category_id: com.canonical.plainbox::suspend
id: suspend/{{ index }}_cycle_resolutions_after_suspend_{{ product_slug }}_graphics
requires: package.name == 'xorg'
depends:
 {%- if gpu_count > "1" %}
  suspend/{{ index }}_suspend_after_switch_to_card_{{ product_slug }}_auto
 {%- else %}
  suspend/suspend_advanced_auto
 {%- endif %}
estimated_duration: 120.0
command:
 # shellcheck disable=SC1091
 source graphics_env.sh {{ driver }} {{ index }}
 if [[ $XDG_SESSION_TYPE == "wayland" ]]
 then
   gnome_randr_cycle.py --keyword={{ index }}_after_suspend --screenshot-dir="$PLAINBOX_SESSION_SHARE"
 else
   xrandr_cycle.py --keyword={{ index }}_after_suspend --screenshot-dir="$PLAINBOX_SESSION_SHARE"
 fi
_description:
 PURPOSE:
     This test will cycle through the detected display modes
 STEPS:
     1. Click "Test" and the display will cycle trough the display modes
 VERIFICATION:
     Did your display look fine in the detected mode?

unit: template
template-resource: graphics_card
template-filter: graphics_card.prime_gpu_offload == 'Off'
plugin: attachment
category_id: com.canonical.plainbox::suspend
id: suspend/{index}_xrandr_screens_after_suspend.tar.gz_auto
depends: after-suspend-graphics/{index}_cycle_resolution_{product_slug}
command: [ -f "$PLAINBOX_SESSION_SHARE"/xrandr_screens_{index}_after_suspend.tgz ] && cat "$PLAINBOX_SESSION_SHARE"/xrandr_screens_{index}_after_suspend.tgz
_description: This attaches screenshots from the suspend/cycle_resolutions_after_suspend test to the results submission.

unit: template
template-resource: graphics_card
template-filter: graphics_card.prime_gpu_offload == 'Off'
template-engine: jinja2
plugin: shell
category_id: com.canonical.plainbox::suspend
id: suspend/{{ index }}_gl_support_after_suspend_{{ product_slug }}_auto
depends:
 {%- if gpu_count > "1" %}
  suspend/{{ index }}_suspend_after_switch_to_card_{{ product_slug }}_auto
 {%- else %}
  suspend/suspend_advanced_auto
 {%- endif %}
requires: package.name == 'nux-tools'
command:
 # shellcheck disable=SC1091
 source graphics_env.sh {{ driver }} {{ index }}
 /usr/lib/nux/unity_support_test -p 2>&1
estimated_duration: 0.130
_description: Check that {{ product }} hardware is able to run a desktop session (OpenGL)
_summary: Test OpenGL support for {{ product }} after suspend

unit: template
template-resource: graphics_card
template-engine: jinja2
plugin: user-interact-verify
category_id: com.canonical.plainbox::suspend
id: suspend/{{ index }}_glxgears_after_suspend_{{ product_slug }}_graphics
depends:
 {%- if gpu_count > "1" %}
  suspend/{{ index }}_suspend_after_switch_to_card_{{ product_slug }}_auto
 {%- else %}
  suspend/suspend_advanced_auto
 {%- endif %}
requires: executable.name == 'glxgears'
command:
 # shellcheck disable=SC1091
 source graphics_env.sh {{ driver }} {{ index }}
 glxgears
 true
_summary: Test that glxgears works for {{ vendor }} {{ product }} after suspend
_description:
 PURPOSE:
     This test tests the basic 3D capabilities of your {{ vendor }} {{ product }} video card after suspend
 STEPS:
     1. Click "Test" to execute an OpenGL demo. Press ESC at any time to close.
     2. Verify that the animation is not jerky or slow.
 VERIFICATION:
     1. Did the 3d animation appear?
     2. Was the animation free from slowness/jerkiness?

unit: template
template-resource: graphics_card
template-engine: jinja2
id: suspend/{{ index }}_video_after_suspend_{{ product_slug }}_graphics
depends:
 {%- if gpu_count > "1" %}
  suspend/{{ index }}_suspend_after_switch_to_card_{{ product_slug }}_auto
 {%- else %}
  suspend/suspend_advanced_auto
 {%- endif %}
plugin: user-interact-verify
category_id: com.canonical.plainbox::suspend
requires:
 package.name == 'xorg'
 package.name == 'gir1.2-gst-plugins-base-0.10' or package.name == 'gir1.2-gst-plugins-base-1.0'
command:
 # shellcheck disable=SC1091
 source graphics_env.sh {{ driver }} {{ index }}
 gst_pipeline_test.py -t 2 'videotestsrc ! videoconvert ! autovideosink' || gst_pipeline_test.py -t 2 'videotestsrc ! ffmpegcolorspace ! autovideosink'
_summary: Test that video can be displayed after suspend with {{ vendor }} {{ product }}
_description:
 PURPOSE:
     This test will test the default display after suspend with a sample video
 STEPS:
     1. Click "Test" to display a video test.
 VERIFICATION:
     Do you see color bars and static?

unit: template
template-resource: graphics_card
template-filter: graphics_card.prime_gpu_offload == 'Off'
template-engine: jinja2
plugin: shell
category_id: com.canonical.plainbox::suspend
id: suspend/{{ index }}_driver_version_after_suspend_{{ product_slug }}_auto
depends:
 {%- if gpu_count > "1" %}
  suspend/{{ index }}_suspend_after_switch_to_card_{{ product_slug }}_auto
 {%- else %}
  suspend/suspend_advanced_auto
 {%- endif %}
command:
 # shellcheck disable=SC1091
 source graphics_env.sh {{ driver }} {{ index }}
 if [[ $XDG_SESSION_TYPE == "wayland" ]]
 then
   inxi_snapshot -Gazy
 else
   graphics_driver.py
 fi
estimated_duration: 0.500
_description: Parses Xorg.0.Log and discovers the running X driver and version after suspend for the {{ vendor }} {{ product }} graphics card
_summary: Test X driver/version after suspend for {{ vendor }} {{ product }}

unit: template
template-resource: graphics_card
template-filter: graphics_card.prime_gpu_offload == 'Off'
template-engine: jinja2
plugin: attachment
category_id: com.canonical.plainbox::suspend
id: suspend/{{ index }}_suspend-single-log-attach_{{ product_slug }}_auto
depends:
 {%- if gpu_count > "1" %}
  suspend/{{ index }}_suspend_after_switch_to_card_{{ product_slug }}_auto
 {%- else %}
  suspend/suspend_advanced_auto
 {%- endif %}
command: [ -e "$PLAINBOX_SESSION_SHARE"/{{ index }}_suspend_single.log ] && cat "$PLAINBOX_SESSION_SHARE"/{{ index }}_suspend_single.log
_description:
 Attaches the log from the single suspend/resume test to the results

unit: template
template-resource: graphics_card
template-filter: graphics_card.prime_gpu_offload == 'Off'
template-engine: jinja2
plugin: shell
category_id: com.canonical.plainbox::suspend
id: suspend/{{ index }}_suspend-time-check_{{ product_slug }}_auto
depends:
 {%- if gpu_count > "1" %}
  suspend/{{ index }}_suspend_after_switch_to_card_{{ product_slug }}_auto
 {%- else %}
  suspend/suspend_advanced_auto
 {%- endif %}
estimated_duration: 1.2
command: [ -e "$PLAINBOX_SESSION_SHARE"/{{ index }}_suspend_single_times.log ] && sleep_time_check.py "$PLAINBOX_SESSION_SHARE"/{{ index }}_suspend_single_times.log
_description: Checks the sleep times to ensure that a machine suspends and resumes within a given threshold

unit: template
template-resource: graphics_card
template-filter: graphics_card.prime_gpu_offload == 'Off'
id: power-management/{index}_suspend_30_times_on_{product_slug}
plugin: shell
category_id: com.canonical.plainbox::stress
estimated_duration: 5400.0
depends:
 power-management/rtc
 suspend/suspend_advanced_auto
 graphics/{index}_auto_switch_card_{product_slug}
flags: noreturn autorestart
user: root
command:
 if type -P fwts >/dev/null; then
  echo "Calling fwts"
  set -o pipefail; checkbox-support-fwts_test -f none -l "$PLAINBOX_SESSION_SHARE"/{index}_suspend_single.log -s s3 --s3-sleep-delay=30 --s3-device-check --s3-device-check-delay=45 | tee "$PLAINBOX_SESSION_SHARE"/{index}_suspend_single_times.log
 else
  echo "Calling sleep_test.py"
  set -o pipefail; sleep_test.py -p | tee "$PLAINBOX_SESSION_SHARE"/{index}_suspend_single_times.log
 fi
_purpose:
 Suspend SUT 30 times while using {product_slug} graphics card
 
unit: template
template-resource: graphics_card
template-filter: graphics_card.prime_gpu_offload == 'Off'
template-engine: jinja2
plugin: user-interact-verify
category_id: com.canonical.plainbox::suspend
id: suspend/{{ index }}_rotation_after_suspend_{{ product_slug }}_graphics
depends:
 {%- if gpu_count > "1" %}
  suspend/{{ index }}_suspend_after_switch_to_card_{{ product_slug }}_auto
 {%- else %}
  suspend/suspend_advanced_auto
 {%- endif %}
command:
 # shellcheck disable=SC1091
 source graphics_env.sh {{ driver }} {{ index }}
 rotation_test.py
estimated_duration: 20.000
_summary: Test rotation for {{ vendor }} {{ product }} after suspend
_description:
 PURPOSE:
     This test will test display rotation on the {{ vendor }} {{ product }} graphics card after suspend
 STEPS:
     1. Click "Test" to test display rotation. The display will be rotated every 4 seconds.
     2. Check if all rotations (normal right inverted left) took place without permanent screen corruption
 VERIFICATION:
     Did the display rotation take place without permanent screen corruption after suspend?