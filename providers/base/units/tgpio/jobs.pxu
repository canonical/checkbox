unit: job
category_id: tgpio
id: tgpio/ptp-virtual-device-node-detect
plugin: shell
imports: from com.canonical.plainbox import manifest
requires:
    manifest.has_tgpio == 'True'
_summary: Check if there's at least one virtual ptp device node
_description:
    This test is to check if there's at least one virtual ptp device node
user: root
command:
    get_virtual_ptp_path.sh 

unit: job
category_id: tgpio
id: tgpio/intc-driver-loaded
plugin: shell
_summary: Verify if all the Intel Controller(INTC) for TGPIO is loaded
_description:
    This test is to enumerate the loaded TGPIO driver. It's hardcoded, so it should
    always be INTC1021, INTC1022, INTC1023, INTC1024.
imports: from com.canonical.plainbox import manifest
requires:
    manifest.has_tgpio == 'True'
user: root
depends: tgpio/ptp-virtual-device-node-detect
command:
    expected_modules='INTC1021 INTC1022 INTC1023 INTC1024'
    EXIT=0
    output=$(modinfo ptp-intel-pmc-tgpio | grep alias)
    for m in ${expected_modules}
    do
        echo "Checking module: ${m}"
        if echo "${output}" | grep -q "${m}"; then
            echo "PASS: ${m} is loaded."
        else
            echo "FAIL: ${m} is not loaded."
            EXIT=1
        fi
    done
    exit $EXIT

unit: template
template-resource: ptp-device-node-info
template-unit: job
template-id: tgpio/ptp-time-check-tests
category_id: tgpio
id: tgpio/ptp-time-check-{ptp_device_node}-{ptp_device_pin}
plugin: shell
_summary:  Check PTP device node function on {ptp_device_node} pin {ptp_device_pin}
_description:
    This test is to check if the ptp device can receive time stamp on {ptp_device_node} pin {ptp_device_pin}.
imports: from com.canonical.plainbox import manifest
requires:
    manifest.has_tgpio == 'True'
    manifest.has_tgpio_server == 'True'
user: root
depends: tgpio/ptp-virtual-device-node-detect
environ:
    TGPIO_RECEIVE_TESTING_TIME
command:
    tgpio.py --run receive --device {ptp_device_node} --pin {ptp_device_pin} --timeout ${{TGPIO_RECEIVE_TESTING_TIME:-10}}
