#!/usr/bin/env bash

# Exit if anything fails
set -e

echo "Configuring system for GPU Testing"
echo "**********************************"
echo "*"

# TODO: Break this into NVIDIA or/and AMD depending on GPUs present?

OSRELEASE=ubuntu`lsb_release -r | cut -f2 |sed -e 's/\.//'`
ARCH=`uname -m`
REPO_URL="https://developer.download.nvidia.com/compute/cuda/repos/$OSRELEASE/$ARCH"

# Import and verify cuda gpg key
TMP_GPG_KEY=/tmp/cuda-archive-keyring.gpg
TMP_KEYRING=/tmp/tmp-keyring.gpg
GPG_FINGERPRINT=EB693B3035CD5710E231E123A4B469963BF863CC
GPG_KEYRING=/usr/share/keyrings/cuda-archive-keyring.gpg
wget -O "$TMP_GPG_KEY" "$REPO_URL/3bf863cc.pub"
if [[ $? -eq 8 ]] ; then
    echo "ERROR: wget failed. Check networking or $OSRELEASE/$ARCH not supported?"
    exit 1
fi
gpg --no-default-keyring --keyring "$TMP_KEYRING" \
    --import "$TMP_GPG_KEY"
gpg --no-default-keyring --keyring "$TMP_KEYRING" \
    --fingerprint "$GPG_FINGERPRINT"
if [[ $? -ne 0 ]] ; then
    echo "ERROR: GPG key import failed. Invalid gpg key?"
    exit 1
fi
gpg --yes --no-default-keyring --keyring "$TMP_KEYRING" --export \
    --output "$GPG_KEYRING"
rm "$TMP_KEYRING" "$TMP_KEYRING~" "$TMP_GPG_KEY"

PINFILE="cuda-$OSRELEASE.pin"
wget -O /etc/apt/preferences.d/cuda-repository-pin-600 "$REPO_URL/$PINFILE"

tee /etc/apt/sources.list.d/cuda-$OSRELEASE-$ARCH.list <<EOF
deb [signed-by=$GPG_KEYRING] $REPO_URL /
EOF

# Install necessary files
apt-get update
echo "*  Installing CUDA toolkit"
apt-get install -y --no-install-recommends cuda-toolkit

# Add CUDA binaries to PATH
CUDA_PATH=$(find /usr/local -maxdepth 1 -type d -iname "cuda*")/bin
export PATH=$PATH:$CUDA_PATH

# Set up gpu-burn and CUDA samples, used for the tests
echo "*  Setting up gpu-burn"
GPU_BURN_DIR=/opt/gpu-burn
git clone https://github.com/wilicc/gpu-burn.git "$GPU_BURN_DIR"
make -C "$GPU_BURN_DIR"
ln -s "$GPU_BURN_DIR/gpu_burn" /usr/local/sbin/gpu_burn

echo "*  Setting up cuda-samples"
CUDA_SAMPLES_DIR=/opt/cuda-samples
git clone https://github.com/nvidia/cuda-samples.git "$CUDA_SAMPLES_DIR"
make -C "$CUDA_SAMPLES_DIR/Samples/0_Introduction/matrixMulDrv"
make -C "$CUDA_SAMPLES_DIR/Samples/0_Introduction/vectorAddDrv"
make -C "$CUDA_SAMPLES_DIR/Samples/1_Utilities/deviceQueryDrv"
make -C "$CUDA_SAMPLES_DIR/Samples/0_Introduction/simpleTextureDrv"
ln -s "$CUDA_SAMPLES_DIR/Samples/0_Introduction/matrixMulDrv/matrixMulDrv" /usr/local/sbin/matrixMulDrv
ln -s "$CUDA_SAMPLES_DIR/Samples/0_Introduction/vectorAddDrv/vectorAddDrv" /usr/local/sbin/vectorAddDrv
ln -s "$CUDA_SAMPLES_DIR/Samples/1_Utilities/deviceQueryDrv/deviceQueryDrv" /usr/local/sbin/deviceQueryDrv
ln -s "$CUDA_SAMPLES_DIR/Samples/0_Introduction/simpleTextureDrv/simpleTextureDrv" /usr/local/sbin/simpleTextureDrv

echo "*"
echo "*  Completed installation. Please reboot the machine now"
echo "*  to load the NVIDIA proprietary drivers"
