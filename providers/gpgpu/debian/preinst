#!/usr/bin/env bash

echo "Configuring system for GPU Testing"
echo "**********************************"
echo "*"

# TODO: Break this into NVIDIA or/and AMD depending on GPUs present?

OSRELEASE=ubuntu`lsb_release -r | cut -f2 |sed -e 's/\.//'`
ARCH=`uname -m`
REPO_URL="https://developer.download.nvidia.com/compute/cuda/repos/$OSRELEASE/$ARCH"

# Import and verify cuda gpg key
TMP_GPG_KEY=/tmp/cuda-archive-keyring.gpg
TMP_KEYRING=/tmp/tmp-keyring.gpg
GPG_FINGERPRINT=EB693B3035CD5710E231E123A4B469963BF863CC
GPG_KEYRING=/usr/share/keyrings/cuda-archive-keyring.gpg
wget -O "$TMP_GPG_KEY" "$REPO_URL/3bf863cc.pub"
if [[ $? -eq 8 ]] ; then
    echo "ERROR: wget failed. Check networking or $OSRELEASE/$ARCH not supported?"
    exit 1
fi
gpg --no-default-keyring --keyring "$TMP_KEYRING" \
    --import "$TMP_GPG_KEY"
gpg --no-default-keyring --keyring "$TMP_KEYRING" \
    --fingerprint "$GPG_FINGERPRINT"
if [[ $? -ne 0 ]] ; then
    echo "ERROR: GPG key import failed. Invalid gpg key?"
    exit 1
fi
gpg --yes --no-default-keyring --keyring "$TMP_KEYRING" --export \
    --output "$GPG_KEYRING"

# Clean up temporary files
if [[ -f "$TMP_KEYRING" ]] ; then rm "$TMP_KEYRING" ; fi
if [[ -f "$TMP_KEYRING~" ]] ; then rm "$TMP_KEYRING~" ; fi
if [[ -f "$TMP_GPG_KEY" ]] ; then rm "$TMP_GPG_KEY" ; fi

PINFILE="cuda-$OSRELEASE.pin"
wget -O /etc/apt/preferences.d/cuda-repository-pin-600 "$REPO_URL/$PINFILE"

tee /etc/apt/sources.list.d/cuda-$OSRELEASE-$ARCH.list <<EOF
deb [signed-by=$GPG_KEYRING] $REPO_URL /
EOF

apt-get update

echo "*"
echo "*  Completed configuration"
